(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{91099:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(72605)}])},72605:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return nK}});var i=t(35250),r=t(49784),a=t(64018),o=t(34768),s=t(54365);let d=(0,a.Gp)((e,n)=>{let{children:t,...a}=e;return(0,i.jsx)(r.xu,{ref:n,border:"1px",boxShadow:"md",borderRadius:"md",borderColor:"cardBorderColor",backgroundColor:"cardBackgroundColor",...a,children:t})}),l=(0,a.Gp)((e,n)=>{let{children:t,className:a,contentProps:l,...u}=e;return(0,i.jsxs)(d,{ref:n,...u,className:(0,s.ll)(o.rn,a),backgroundColor:{base:"mobileCardBackgroundColor",sm:"transparent"},backdropFilter:{base:"initial",sm:"blur(8px)"},children:[(0,i.jsx)(r.kC,{justifyContent:"center",cursor:"move",children:(0,i.jsx)(r.xu,{as:"span",width:"8",height:"1",backgroundColor:"gray.300",borderRadius:"full",marginY:"2"})}),(0,i.jsx)(r.iz,{marginBottom:"2"}),(0,i.jsx)(r.xu,{width:"100%",height:"calc(100% - var(--chakra-space-9))",sx:{scrollbarWidth:"none",scrollbarColor:"transparent"},...l,className:o.Zz,children:t})]})});var u=t(66421);let c=(0,u.WidthProvider)(u.Responsive),m=(0,a.zo)(c),p=u.Responsive;var f=t(89285),T=t(58978),g=t(20128),h=t(44387),b=t(61395),y=t(3433),M=t(7479),H=t(59991),L=t(10851),E=t(92237),v=t(26083),x=t(70079);let R=e=>(n,t,i)=>({i:t+n,x:Math.floor(n%e),y:Math.floor(n/e),w:1,maxW:e,h:10+Math.floor(i/60),minH:10}),P=R(1),C=R(2),S=R(3),A=e=>(0,x.useMemo)(()=>{let n=e.map((e,n)=>{let{id:t,bodyText:i}=e;return P(n,t,i.length)}),t=e.map((e,n)=>{let{id:t,bodyText:i}=e;return C(n,t,i.length)}),i=e.map((e,n)=>{let{id:t,bodyText:i}=e;return S(n,t,i.length)});return{lg:i,md:i,sm:t,xs:n,xxs:n}},[e]);var w=t(11094),D=t(91076),k=t(8418);let F={width:0,height:0,left:0,right:0,top:0,bottom:0,x:0,y:0};function j(e){let{ref:n,cssSelector:t}=e,[i,r]=(0,k.G)(F,100);return(0,x.useEffect)(()=>{let e=n?n.current:t?document.querySelector(t):null;if(e){if(window.ResizeObserver){let i=new ResizeObserver(()=>{r(e.getBoundingClientRect())});return i.observe(e),()=>i.disconnect()}{let a=()=>r(e.getBoundingClientRect());return a(),window.addEventListener("resize",a,{passive:!0}),()=>window.removeEventListener("resize",a)}}},[n,t,r]),i}let I=(e,n,t)=>{let[i,r]=(0,x.useState)(F),a=(0,x.useRef)(0),o=(0,H.W6)(()=>{a.current++,(i=>{null==t||t();let o=document.querySelector(e),s=n.map(e=>document.querySelector(e)).filter(Boolean);if(o){let d=(0,w.Dz)(o);(0,w.jF)(d)?(s.forEach(e=>{let n=e.getBoundingClientRect();n.top<d.top&&(d.top=n.top),n.bottom>d.bottom&&(d.bottom=n.bottom),n.left<d.left&&(d.left=n.left),n.right>d.right&&(d.right=n.right),d.width=d.right-d.left,d.height=d.bottom-d.top}),s=[],r(d)):(0,w.ld)(o,{block:"center",behavior:"auto"}).then(()=>{d=(0,w.Dz)(o),s.forEach(e=>{let n=e.getBoundingClientRect();n.top<d.top&&(d.top=n.top),n.bottom>d.bottom&&(d.bottom=n.bottom),n.left<d.left&&(d.left=n.left),n.right>d.right&&(d.right=n.right),d.width=d.right-d.left,d.height=d.bottom-d.top}),s=[],a.current===i&&r(d)})}else r({...F})})(a.current)}),s=(0,x.useMemo)(()=>(0,D.Z)(o,200,{leading:!0}),[o]);return(0,x.useEffect)(()=>(s(),window.addEventListener("resize",s,{passive:!0}),()=>window.removeEventListener("resize",s)),[s,n,r,e]),{sizes:i,debouncedRefresh:s}};var V=t(12852),G=t(17894),O=t(63893),N=t(55165),z=t(82116),_=t.n(z),W=t(80338),B=t(94433),U=t(23648),K=t(45088),J=t(26766),q=t(24347),X=t(94089),Z=t(68553),Y=t(89777),Q=t(69346),$=t(27960);W.Z.registerLanguage("css",B.Z),W.Z.registerLanguage("json",J.Z),W.Z.registerLanguage("java",U.Z),W.Z.registerLanguage("javascript",K.Z),W.Z.registerLanguage("typescript",Q.Z),W.Z.registerLanguage("less",q.Z),W.Z.registerLanguage("scss",X.Z),W.Z.registerLanguage("shell",Z.Z),W.Z.registerLanguage("xml",$.Z),W.Z.registerLanguage("sql",Y.Z);let ee=W.Z,en=new(_()),et=new(_())({html:!0,xhtmlOut:!0,breaks:!0,highlight:function(e,n){if(n&&ee.getLanguage(n))try{let t=ee.highlight(e,{language:n,ignoreIllegals:!0}).value,i=t.split(/\n/).slice(0,-1),r=String(i.length).length-.2,a=i.reduce((e,n,t)=>"".concat(e,"<span class='d-inline-block text-center border-right pr-2 mr-2 border-dark' style='min-width: ").concat(r,"em; line-height: 1.5'>").concat(t+1,"</span>").concat(n,"\n"),"<div class='w-100 position-absolute' style='left: 0; top: 0; font-size: 0px'>\n            <b class='position-absolute text-info' style='left: 10px; font-size: 12px; top: 4px;'>".concat(n,"</b>\n            <div class='position-absolute w-100 border-bottom border-dark' style='left: 0; top: 24px;'></div>\n          </div>"));return'<pre class="rounded position-relative"><code class="hljs '.concat(n,"\" style='padding-top: 30px;'>").concat(a,"</code></pre>")}catch(o){}return'<pre class="rounded"><code class="hljs">'+en.utils.escapeHtml(e)+"</code></pre>"}}),ei=new(_())({html:!0,xhtmlOut:!0,breaks:!0,highlight:function(e,n){if(n&&ee.getLanguage(n))try{let t=ee.highlight(e,{language:n,ignoreIllegals:!0}).value;return'<pre class="rounded bg-dark"><code class="bg-dark hljs '.concat(n,'">').concat(t,"</code></pre>")}catch(i){}return'<pre class="rounded bg-dark"><code class="bg-dark hljs">'.concat(en.utils.escapeHtml(e),"</code></pre>")}});var er=t(14053),ea=t(51391),eo=t.n(ea);t(44739);var es=t(5869),ed=t.n(es),el=t(96477),eu=t.n(el),ec=t(87864);eo().locale("zh-cn"),eo().extend(eu()),eo().extend(ed());let em=e=>("string"==typeof e&&(e=new Date(e)),e instanceof Date)?eo()(new Date).to(eo()(e)):((0,ec.c)("time parameter error : ".concat(e),"error"),eo()().toNow()),ep=(0,a.Gp)((e,n)=>{let{avatarUrl:t,login:a,time:o,avatarProps:s,children:d,...l}=e;return(0,i.jsxs)(r.kC,{...l,ref:n,children:[(0,i.jsxs)(r.kC,{alignItems:"center",children:[(0,i.jsx)(er.qE,{src:t,title:a,name:a,size:"sm",...s}),(0,i.jsxs)(r.xu,{marginLeft:"2",children:[(0,i.jsx)(r.xv,{fontWeight:"semibold",fontSize:"sm",children:a}),(0,i.jsx)(r.xv,{fontSize:"x-small",color:"lightTextColor",children:em(o)})]})]}),d]})}),ef=(0,a.Gp)((e,n)=>{let{children:t,transform:a,...o}=e;return(0,i.jsx)(r.xu,{ref:n,position:"relative",transform:a,transformOrigin:"center",transition:"transform 0.2s",_hover:{transform:"scale(1.2, 1.2) ".concat(a||""),zIndex:"1"},...o,children:t})}),eT=e=>{let{title:n,externalUrl:t,detailNumber:a}=e,{push:o,query:s}=(0,G.useRouter)(),d=()=>o({pathname:"/",query:{...s,overlay:"open",detailId:a}},void 0,{scroll:!1}),l=()=>window.open(t,"_blank");return(0,i.jsxs)(r.kC,{justifyContent:"space-between",alignItems:"center",children:[(0,i.jsx)(r.xv,{fontSize:{base:"18",md:"20",lg:"22"},width:"85%",fontWeight:"medium",title:n,noOfLines:1,children:n}),(0,i.jsx)(ef,{display:"flex",alignItems:"center",children:(0,i.jsx)(L.hU,{"aria-label":"detail",onClick:d,variant:"link",size:"sm",icon:(0,i.jsx)(V.JO,{as:O.Td4,userSelect:"none"})})}),(0,i.jsx)(ef,{display:"flex",alignItems:"center",children:(0,i.jsx)(L.hU,{size:"sm",variant:"link","aria-label":"open",icon:(0,i.jsx)(V.JO,{as:N.wz_}),onClick:l})})]})},eg=e=>{let{title:n,number:t,body:a,publishedAt:o,author:{avatarUrl:s,login:d},url:l}=e,u=(0,x.useMemo)(()=>ei.render(a),[a]);return(0,i.jsxs)(r.kC,{flexDirection:"column",height:"100%",children:[(0,i.jsxs)(r.xu,{padding:"2",backgroundColor:"cardBackgroundColor",borderTopRadius:"md",children:[(0,i.jsx)(eT,{title:n,externalUrl:l,detailNumber:t}),(0,i.jsx)(ep,{avatarUrl:s,login:d,time:o,marginTop:"2",alignItems:"center",avatarProps:{width:6,height:6}})]}),(0,i.jsx)(r.iz,{}),(0,i.jsx)(r.xu,{className:"typo",overflow:{base:"hidden",lg:"auto"},padding:"2",fontSize:"sm",borderBottomRadius:"md",backgroundColor:"cardBackgroundColor",dangerouslySetInnerHTML:{__html:u}})]})},eh={lg:3,md:3,sm:2,xs:1,xxs:1},eb=e=>{let{data:n}=e,t=A(n),{width:r}=j({cssSelector:".grid-card-list"});return(0,i.jsx)(p,{width:r,layouts:t,cols:eh,rowHeight:o.W_,draggableHandle:".".concat(o.rn),draggableCancel:".".concat(o.Zz),children:n.map((e,n)=>(0,i.jsx)(l,{children:(0,i.jsx)(eg,{...e})},e.id+n))})},ey=e=>{let{data:n,disableGridLayout:t=!0}=e;return t?(0,i.jsx)(r.MI,{width:"100%",padding:"2",columns:{base:1,lg:2,xl:3},spacing:3,children:n.map((e,n)=>(0,i.jsx)(d,{maxHeight:"96",children:(0,i.jsx)(eg,{...e})},e.id+n))}):(0,i.jsx)(eb,{data:n})},eM=(0,x.memo)(ey);var eH=t(428);let eL=e=>{let{error:n}=e,t=(0,eH.pm)();return(0,x.useEffect)(()=>{t({title:"Get Blog Error",description:n.message,status:"error"})},[n,t]),(0,i.jsx)(x.Fragment,{})};var eE=t(78524);let ev=()=>{let{query:e={}}=(0,G.useRouter)(),n=e.before,t=e.after,i=e.nav;return{before:n,after:t,navDirection:i}};var ex=t(30021);let eR=()=>{let{query:e,push:n,pathname:t}=(0,G.useRouter)(),i="open"===e.overlay,r="MyReact"===e.playGround,a=(0,H.W6)(()=>{n({pathname:t,query:{...e,overlay:"open",playGround:"MyReact"}},void 0,{scroll:!1})}),o=(0,H.W6)(()=>{n({pathname:t,query:{...(0,ex.Z)(e,["overlay","playGround"])}},void 0,{scroll:!1})});return{isOpen:i&&r,onOpen:a,onClose:o}};var eP=t(6045),eC=t(78258);let eS=e=>{let{body:n,author:{login:t,avatarUrl:a},updatedAt:o}=e,s=(0,x.useMemo)(()=>et.render(n),[n]);return(0,i.jsxs)(d,{marginY:"2",padding:"2",backgroundColor:"initial",children:[(0,i.jsx)(ep,{avatarUrl:a,login:t,time:o,alignItems:"flex-end",avatarProps:{width:6,height:6}}),(0,i.jsx)(r.xu,{marginTop:"3.5",className:"typo",fontSize:"small",dangerouslySetInnerHTML:{__html:s}})]})},eA=e=>{let{data:n}=e;return(0,i.jsxs)(i.Fragment,{children:[n.length>0&&(0,i.jsx)(r.iz,{marginY:"2"}),n.map(e=>(0,i.jsx)(eS,{...e},e.id))]})},ew=e=>{let{data:n,Render:t}=e;return t({data:n})},eD=e=>{let{id:n,Render:t,RenderLoading:r}=e,{data:a,loading:o,error:s,fetchMore:d,networkStatus:l}=(0,T.a)(h.QXI,{variables:{name:eE.s8,owner:eE.u8,number:Number(n),first:15},skip:void 0===n,notifyOnNetworkStatusChange:!0}),u=(0,H.W6)(()=>{var e,n,t,i;(null==a?void 0:null===(e=a.repository)||void 0===e?void 0:null===(n=e.issue)||void 0===n?void 0:null===(t=n.comments)||void 0===t?void 0:null===(i=t.pageInfo)||void 0===i?void 0:i.hasNextPage)&&d({variables:{after:a.repository.issue.comments.pageInfo.endCursor}})},[]),c=(0,x.useMemo)(()=>(0,v.Z)(e=>{let n=e.target;n&&n.scrollTop+n.clientHeight>=.85*n.scrollHeight&&u()},500),[u]);return((0,x.useEffect)(()=>{let e=document.querySelector("#modal-scroll-box");if(e)return e.addEventListener("scroll",c),()=>e.removeEventListener("scroll",c)},[c]),o&&l!==g.I.fetchMore)?r:s?(0,i.jsx)(eL,{error:s}):(0,i.jsx)(ew,{data:a,Render:t})},ek=e=>{let{id:n}=e;return(0,i.jsx)(eD,{id:n,RenderLoading:(0,i.jsx)(r.xu,{padding:"2",children:(0,i.jsx)(b.N2,{marginTop:"4",noOfLines:8})}),Render(e){var n,t,a,o,s,l,u,c;let{data:m}=e,p=(0,x.useMemo)(()=>{var e,n;return et.render((null==m?void 0:null===(e=m.repository)||void 0===e?void 0:null===(n=e.issue)||void 0===n?void 0:n.body)||"")},[m]);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d,{padding:"2",borderColor:"Highlight",backgroundColor:"initial",children:[(0,i.jsx)(ep,{marginTop:"2",alignItems:"center",time:null==m?void 0:null===(n=m.repository)||void 0===n?void 0:null===(t=n.issue)||void 0===t?void 0:t.publishedAt,login:null==m?void 0:null===(a=m.repository)||void 0===a?void 0:null===(o=a.issue)||void 0===o?void 0:null===(s=o.author)||void 0===s?void 0:s.login,avatarUrl:null==m?void 0:null===(l=m.repository)||void 0===l?void 0:null===(u=l.issue)||void 0===u?void 0:null===(c=u.author)||void 0===c?void 0:c.avatarUrl,avatarProps:{width:6,height:6}}),(0,i.jsx)(r.xu,{className:"typo",marginTop:"3.5",fontSize:{base:"sm",lg:"md"},dangerouslySetInnerHTML:{__html:p}})]}),(0,i.jsx)(eA,{data:m.repository.issue.comments.nodes})]})}})},eF=e=>{let{id:n}=e;return(0,i.jsx)(eD,{id:n,RenderLoading:(0,i.jsxs)(r.xu,{padding:"2",children:[(0,i.jsx)(b.N2,{noOfLines:1,paddingRight:"6"}),(0,i.jsx)(b.s7,{marginY:"3"}),(0,i.jsx)(b.N2,{noOfLines:1,spacing:"4"})]}),Render(e){var n,t;let{data:a}=e,o=(0,eC.x)(),s=()=>o.refetchQueries({include:[h.QXI]});return(0,i.jsx)(r.xu,{paddingRight:"3em",children:(0,i.jsxs)(r.xv,{as:"h1",fontSize:{base:"lg",md:"xl",lg:"2xl"},children:[null==a?void 0:null===(n=a.repository)||void 0===n?void 0:null===(t=n.issue)||void 0===t?void 0:t.title,(0,i.jsx)(ef,{marginLeft:"2",display:"inline-flex",alignItems:"center",children:(0,i.jsx)(L.hU,{size:"sm",variant:"link","aria-label":"reload",onClick:()=>s(),icon:(0,i.jsx)(V.JO,{as:O.Em2})})})]})})}})},ej=()=>{let{query:e,push:n}=(0,G.useRouter)(),t=(0,eP.Jv)(),r=(0,eP.rC)(),a=e.detailId,o="open"===e.overlay;return(0,x.useEffect)(()=>{o&&void 0!==a?t({head:(0,i.jsx)(eF,{id:a}),body:(0,i.jsx)(ek,{id:a}),closeComplete:()=>n({pathname:"/",query:{...(0,ex.Z)(e,["overlay","detailId"])}},void 0,{scroll:!1})}):r()},[a,r,o,t,n,e]),(0,i.jsx)(x.Fragment,{})},eI=(0,x.memo)(ej),eV=e=>{let{paginationProps:n,containerProps:t}=e,{push:a,query:o}=(0,G.useRouter)(),{hasNextPage:s,hasPreviousPage:d,endCursor:l,startCursor:u}=n;return(0,i.jsx)(r.xu,{...t,children:(0,i.jsxs)(L.hE,{size:"sm",variant:"ghost",children:[(0,i.jsx)(L.hU,{"aria-label":"Prev",icon:(0,i.jsx)(V.JO,{as:O.CF5}),disabled:!d,onClick(){a({pathname:"/",query:{...(0,ex.Z)(o,["before","after","nav"]),before:u,nav:"last"}})}}),(0,i.jsx)(L.hU,{"aria-label":"Next",icon:(0,i.jsx)(V.JO,{as:O.Td4}),disabled:!s,onClick(){a({pathname:"/",query:{...(0,ex.Z)(o,["before","after","nav"]),after:l,nav:"first"}})}})]})})};var eG=t(98344),eO=t(43981),eN=t(31578),ez=t(34314),e_=t(4028),eW=t(86626);let eB={"script.tsx":{id:"main",type:"text/babel",name:"script.tsx",language:"typescript",content:'\n\n// MyReact dev highlight\n(window as any).__highlight__ = false;\n\nconst { useState, useEffect, memo } = React;\n\nconst { __my_react_reactive__, createReactive } = React as any;\n\n// ==== reactive api, more api see “https://github.com/MrWangJustToDo/MyReact” ==== //\n// reactive api like “Vue"\nconst { reactiveApi, onMounted, onBeforeMount, onBeforeUpdate, onUpdated, onBeforeUnmount, onUnmounted } = __my_react_reactive__;\n\nconst { reactive, ref } = reactiveApi;\n\nconst useReactiveApi_Time = () => {\n  const timeRef = ref(new Date().toString());\n  let id = null;\n  onMounted(() => {\n    id = setInterval(() => timeRef.value = new Date().toString(), 1000)\n  })\n\n  onUnmounted(() => {\n    clearInterval(id);\n  })\n\n  return timeRef\n}\n\nconst useReactiveApi_Position = () => {\n  const position = reactive({ x: 0, y: 0 });\n  const action = (e) => (position.x = e.clientX, position.y = e.clientY);\n  onMounted(() => {\n    window.addEventListener("mousemove", action);\n  })\n\n  onUnmounted(() => {\n    window.removeEventListener("mousemove", action);\n  })\n\n  return position\n}\n\nconst ReactiveHook = createReactive(() => {\n  const timeRef = useReactiveApi_Time();\n  const position = useReactiveApi_Position();\n  return { timeRef, position }\n})\n\nconst TestReactive = createReactive({\n  setup: () => {\n    const valueRef = ref("");\n    const count = ref(0);\n    const changeRef = (e) => {\n      valueRef.value = e.target.value;\n    };\n\n    onBeforeUpdate(() => {\n      // count.current++;\n      count.value++;\n      console.log(\'TestReactive before update\')\n    })\n\n    return { changeRef, valueRef, count };\n  },\n  render: ({ valueRef, changeRef, count }, { isMemo }) => { return <div> <h3>{ isMemo ? \'memo reactive\' : \'reactive\' }</h3> <p>update count: {count}</p> reactive control component: <input value={valueRef} onChange={changeRef} /></div> }\n})\n\nconst MemoTestReactive = memo(TestReactive);\n\n// ==== reactive example done ==== //\n\nconst ReactGridLayout = (window as any).ReactGridLayout;\n\nconst ReactWindow = (window as any).ReactWindow;\n\nconst { WidthProvider } = ReactGridLayout;\n\nconst { VariableSizeList } = ReactWindow;\n\nconst WithReactGridLayout = WidthProvider(ReactGridLayout);\n\nconst originalLayout = [];\n\nconst useTime = () => {\n  const [time, setTime] = useState(new Date().toString());\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTime(new Date().toString());\n    }, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return time;\n}\n\nconst rowHeights = new Array(1000)\n  .fill(true)\n  .map(() => 25 + Math.round(Math.random() * 50));\n\nconst getItemSize = index => rowHeights[index];\n\nconst Row = ({ index, style }) => (\n  <div className={index % 2 ? \'ListItemOdd\' : \'ListItemEven\'} style={style}>\n    Row {index}\n  </div>\n);\n\nconst ReactWindowExample = () => (\n  <VariableSizeList\n    className="List"\n    height={150}\n    itemCount={1000}\n    itemSize={getItemSize}\n    width={300}\n  >\n    {Row}\n  </VariableSizeList>\n);\n\nclass LocalStorageLayout extends React.PureComponent<{ onLayoutChange: Function }, { layout: any }> {\n  static defaultProps = {\n    className: "layout",\n    cols: 12,\n    rowHeight: 30,\n    onLayoutChange: function () { },\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      layout: JSON.parse(JSON.stringify(originalLayout)),\n    };\n    this.onLayoutChange = this.onLayoutChange.bind(this);\n    this.resetLayout = this.resetLayout.bind(this);\n  }\n  resetLayout() {\n    this.setState({\n      layout: [],\n    });\n  }\n  onLayoutChange(layout) {\n    this.setState({ layout });\n    this.props.onLayoutChange(layout); // updates status display\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this.resetLayout}>Reset Layout</button>\n        <WithReactGridLayout\n          {...this.props}\n          layout={this.state.layout}\n          onLayoutChange={this.onLayoutChange}\n        >\n          <div key="1" data-grid={{ w: 2, h: 3, x: 0, y: 0 }}>\n            <span className="text">1</span>\n          </div>\n          <div key="2" data-grid={{ w: 2, h: 3, x: 2, y: 0 }}>\n            <span className="text">2</span>\n          </div>\n          <div key="3" data-grid={{ w: 2, h: 3, x: 4, y: 0 }}>\n            <span className="text">3</span>\n          </div>\n          <div key="4" data-grid={{ w: 2, h: 3, x: 6, y: 0 }}>\n            <span className="text">4</span>\n          </div>\n          <div key="5" data-grid={{ w: 2, h: 3, x: 8, y: 0 }}>\n            <span className="text">5</span>\n          </div>\n        </WithReactGridLayout>\n      </div>\n    );\n  }\n}\n\nconst App = () => {\n  const time = useTime();\n\n  return <div>\n    <div>\n      <h1>MyReact reactive api example</h1>\n      <TestReactive />\n      <MemoTestReactive isMemo />\n      <ReactiveHook>\n        {({timeRef, position: {x, y}}) => <div>\n          <h3>reactive hook</h3>\n          <p>ref time:  {timeRef}</p>\n          <p>reactive position: {x}: {y} </p>\n        </div>}\n      </ReactiveHook>\n    </div>\n    <hr />\n    <div>\n      <h2>MyReact timer</h2>\n      <p>Time: {time}</p>\n    </div>\n    <hr />\n    <div>\n      <h2>MyReact window example</h2>\n      <ReactWindowExample />\n    </div>\n    <hr />\n    <div>\n      <h2>MyReact Grid Layout example</h2>\n      <LocalStorageLayout />\n    </div>\n  </div>\n}\n\nReactDOM.render(<App />, document.querySelector("#root"));\n'},"main.css":{id:"main",name:"main.css",language:"css",content:"\n#content {\n  width: 100%;\n}\n.react-grid-layout {\n  background: #eee;\n  margin-top: 10px;\n}\n.layoutJSON {\n  background: #ddd;\n  border: 1px solid black;\n  margin-top: 10px;\n  padding: 10px;\n}\n.columns {\n  -moz-columns: 120px;\n  -webkit-columns: 120px;\n  columns: 120px;\n}\n.react-grid-item {\n  box-sizing: border-box;\n}\n.react-grid-item:not(.react-grid-placeholder) {\n  background: #ccc;\n  border: 1px solid black;\n}\n.react-grid-item.resizing {\n  opacity: 0.9;\n}\n.react-grid-item.static {\n  background: #cce;\n}\n.react-grid-item .text {\n  font-size: 24px;\n  text-align: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  height: 24px;\n}\n.react-grid-item .minMax {\n  font-size: 12px;\n}\n.react-grid-item .add {\n  cursor: pointer;\n}\n.react-grid-dragHandleExample {\n  cursor: move; /* fallback if grab cursor is unsupported */\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.toolbox {\n  background-color: #dfd;\n  width: 100%;\n  height: 120px;\n  overflow: scroll;\n}\n.hide-button {\n  cursor: pointer;\n  position: absolute;\n  font-size: 20px;\n  top: 0px;\n  right: 5px;\n}\n.toolbox__title {\n  font-size: 24px;\n  margin-bottom: 5px;\n}\n.toolbox__items {\n  display: block;\n}\n.toolbox__items__item {\n  display: inline-block;\n  text-align: center;\n  line-height: 40px;\n  cursor: pointer;\n  width: 40px;\n  height: 40px;\n  padding: 10px;\n  margin: 5px;\n  border: 1px solid black;\n  background-color: #ddd;\n}\n.droppable-element {\n  width: 150px;\n  text-align: center;\n  background: #fdd;\n  border: 1px solid black;\n  margin: 10px 0;\n  padding: 10px;\n}\n    "},"style.css":{id:"style",name:"style.css",language:"css",content:'\n.react-grid-layout {\n  position: relative;\n  transition: height 200ms ease;\n}\n.react-grid-item {\n  transition: all 200ms ease;\n  transition-property: left, top;\n}\n.react-grid-item img {\n  pointer-events: none;\n  user-select: none;\n}\n.react-grid-item.cssTransforms {\n  transition-property: transform;\n}\n.react-grid-item.resizing {\n  z-index: 1;\n  will-change: width, height;\n}\n.react-grid-item.react-draggable-dragging {\n  transition: none;\n  z-index: 3;\n  will-change: transform;\n}\n.react-grid-item.dropping {\n  visibility: hidden;\n}\n.react-grid-item.react-grid-placeholder {\n  background: red;\n  opacity: 0.2;\n  transition-duration: 100ms;\n  z-index: 2;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n}\n.react-grid-item > .react-resizable-handle {\n  position: absolute;\n  width: 20px;\n  height: 20px;\n}\n.react-grid-item > .react-resizable-handle::after {\n  content: "";\n  position: absolute;\n  right: 3px;\n  bottom: 3px;\n  width: 5px;\n  height: 5px;\n  border-right: 2px solid rgba(0, 0, 0, 0.4);\n  border-bottom: 2px solid rgba(0, 0, 0, 0.4);\n}\n.react-resizable-hide > .react-resizable-handle {\n  display: none;\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-sw {\n  bottom: 0;\n  left: 0;\n  cursor: sw-resize;\n  transform: rotate(90deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-se {\n  bottom: 0;\n  right: 0;\n  cursor: se-resize;\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-nw {\n  top: 0;\n  left: 0;\n  cursor: nw-resize;\n  transform: rotate(180deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-ne {\n  top: 0;\n  right: 0;\n  cursor: ne-resize;\n  transform: rotate(270deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-w,\n.react-grid-item > .react-resizable-handle.react-resizable-handle-e {\n  top: 50%;\n  margin-top: -10px;\n  cursor: ew-resize;\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-w {\n  left: 0;\n  transform: rotate(135deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-e {\n  right: 0;\n  transform: rotate(315deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-n,\n.react-grid-item > .react-resizable-handle.react-resizable-handle-s {\n  left: 50%;\n  margin-left: -10px;\n  cursor: ns-resize;\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-n {\n  top: 0;\n  transform: rotate(225deg);\n}\n.react-grid-item > .react-resizable-handle.react-resizable-handle-s {\n  bottom: 0;\n  transform: rotate(45deg);\n}\n.List {\n  border: 1px solid #d9dddd;\n}\n\n.ListItemEven,\n.ListItemOdd {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.ListItemEven {\n  background-color: #f8f8f0;\n}\n  '},"index.html":{id:"main",name:"index.html",language:"html",content:"<h1 style='text-align: center;' >Play MyReact, open devtools to debug</h1> <div id='root'></div>"}},eU=(0,e_.ZP)()((0,eW.mW)((0,eW.tJ)((e,n)=>({file:"script.tsx",files:eB,reset:()=>e({files:eB,file:"script.tsx"}),setFile(t){let{files:i,file:r}=n(),a=Object.keys(i);t!==r&&a.includes(t)&&e({file:t})},setContent:(0,D.Z)(t=>{let i=n(),{file:r,files:a}=i;e({files:{...a,[r]:{...a[r],content:t}}})},200,{leading:!0})}),{name:"MyReact_playGround_2022-10-12.1"}))),eK=async(e,n)=>{let{default:i}=await Promise.all([t.e(774),t.e(714),t.e(527)]).then(t.bind(t,26395)),{parse:r}=await t.e(714).then(t.bind(t,92575)),{default:a}=await t.e(244).then(t.bind(t,25244)),o=new a(n,r,i,e);o.highlightOnDidChangeModelContent(),o.addJSXCommentCommand(),n.languages.typescript.typescriptDefaults.setCompilerOptions({target:n.languages.typescript.ScriptTarget.Latest,moduleResolution:n.languages.typescript.ModuleResolutionKind.NodeJs,module:n.languages.typescript.ModuleKind.CommonJS,noEmit:!0,esModuleInterop:!0,jsx:n.languages.typescript.JsxEmit.React,reactNamespace:"React",allowJs:!0,typeRoots:["node_modules"]}),n.languages.typescript.typescriptDefaults.setDiagnosticsOptions({noSemanticValidation:!1,noSyntaxValidation:!1}),n.languages.typescript.typescriptDefaults.addExtraLib('\n    // Type definitions for React 18.0\n    // Project: http://facebook.github.io/react/\n    // Definitions by: Asana <https://asana.com>\n    //                 AssureSign <http://www.assuresign.com>\n    //                 Microsoft <https://microsoft.com>\n    //                 John Reilly <https://github.com/johnnyreilly>\n    //                 Benoit Benezech <https://github.com/bbenezech>\n    //                 Patricio Zavolinsky <https://github.com/pzavolinsky>\n    //                 Eric Anderson <https://github.com/ericanderson>\n    //                 Dovydas Navickas <https://github.com/DovydasNavickas>\n    //                 Josh Rutherford <https://github.com/theruther4d>\n    //                 Guilherme H\xfcbner <https://github.com/guilhermehubner>\n    //                 Ferdy Budhidharma <https://github.com/ferdaber>\n    //                 Johann Rakotoharisoa <https://github.com/jrakotoharisoa>\n    //                 Olivier Pascal <https://github.com/pascaloliv>\n    //                 Martin Hochel <https://github.com/hotell>\n    //                 Frank Li <https://github.com/franklixuefei>\n    //                 Jessica Franco <https://github.com/Jessidhia>\n    //                 Saransh Kataria <https://github.com/saranshkataria>\n    //                 Kanitkorn Sujautra <https://github.com/lukyth>\n    //                 Sebastian Silbermann <https://github.com/eps1lon>\n    //                 Kyle Scully <https://github.com/zieka>\n    //                 Cong Zhang <https://github.com/dancerphil>\n    //                 Dimitri Mitropoulos <https://github.com/dimitropoulos>\n    //                 JongChan Choi <https://github.com/disjukr>\n    //                 Victor Magalh\xe3es <https://github.com/vhfmag>\n    //                 Dale Tan <https://github.com/hellatan>\n    //                 Priyanshu Rav <https://github.com/priyanshurav>\n    // Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n    // TypeScript Version: 2.8\n    \n    // NOTE: Users of the \'experimental\' builds of React should add a reference\n    // to \'react/experimental\' in their project. See experimental.d.ts\'s top comment\n    // for reference and documentation on how exactly to do it.\n    \n    /// <reference path="global.d.ts" />\n    \n    import * as CSS from "csstype";\n    import * as PropTypes from "prop-types";\n    import { Interaction as SchedulerInteraction } from "scheduler/tracing";\n    \n    type NativeAnimationEvent = AnimationEvent;\n    type NativeClipboardEvent = ClipboardEvent;\n    type NativeCompositionEvent = CompositionEvent;\n    type NativeDragEvent = DragEvent;\n    type NativeFocusEvent = FocusEvent;\n    type NativeKeyboardEvent = KeyboardEvent;\n    type NativeMouseEvent = MouseEvent;\n    type NativeTouchEvent = TouchEvent;\n    type NativePointerEvent = PointerEvent;\n    type NativeTransitionEvent = TransitionEvent;\n    type NativeUIEvent = UIEvent;\n    type NativeWheelEvent = WheelEvent;\n    type Booleanish = boolean | "true" | "false";\n    \n    declare const UNDEFINED_VOID_ONLY: unique symbol;\n    // Destructors are only allowed to return void.\n    type Destructor = () => void | { [UNDEFINED_VOID_ONLY]: never };\n    type VoidOrUndefinedOnly = void | { [UNDEFINED_VOID_ONLY]: never };\n    \n    // tslint:disable-next-line:export-just-namespace\n    export = React;\n    export as namespace React;\n    \n    declare namespace React {\n      //\n      // React Elements\n      // ----------------------------------------------------------------------\n    \n      type ElementType<P = any> =\n        | {\n            [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K]\n              ? K\n              : never;\n          }[keyof JSX.IntrinsicElements]\n        | ComponentType<P>;\n      type ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P>;\n    \n      type JSXElementConstructor<P> =\n        | ((props: P) => ReactElement<any, any> | null)\n        | (new (props: P) => Component<any, any>);\n    \n      interface RefObject<T> {\n        readonly current: T | null;\n      }\n      // Bivariance hack for consistent unsoundness with RefObject\n      type RefCallback<T> = {\n        bivarianceHack(instance: T | null): void;\n      }["bivarianceHack"];\n      type Ref<T> = RefCallback<T> | RefObject<T> | null;\n      type LegacyRef<T> = string | Ref<T>;\n      /**\n       * Gets the instance type for a React element. The instance will be different for various component types:\n       *\n       * - React class components will be the class instance. So if you had \'class Foo extends React.Component<{}> {}\'\n       *   and used \'React.ElementRef<typeof Foo>\' then the type would be the instance of \'Foo\'.\n       * - React stateless functional components do not have a backing instance and so \'React.ElementRef<typeof Bar>\'\n       *   (when \'Bar\' is \'function Bar() {}\') will give you the \'undefined\' type.\n       * - JSX intrinsics like \'div\' will give you their DOM instance. For \'React.ElementRef<\'div\'>\' that would be\n       *   \'HTMLDivElement\'. For \'React.ElementRef<\'input\'>\' that would be \'HTMLInputElement\'.\n       * - React stateless functional components that forward a \'ref\' will give you the \'ElementRef\' of the forwarded\n       *   to component.\n       *\n       * \'C\' must be the type _of_ a React component so you need to use typeof as in React.ElementRef<typeof MyComponent>.\n       *\n       * @todo In Flow, this works a little different with forwarded refs and the \'AbstractComponent\' that\n       *       \'React.forwardRef()\' returns.\n       */\n      type ElementRef<\n        C extends\n          | ForwardRefExoticComponent<any>\n          | { new (props: any): Component<any> }\n          | ((props: any, context?: any) => ReactElement | null)\n          | keyof JSX.IntrinsicElements\n      > =\n        // need to check first if \'ref\' is a valid prop for ts@3.0\n        // otherwise it will infer \'{}\' instead of \'never\'\n        "ref" extends keyof ComponentPropsWithRef<C>\n          ? NonNullable<ComponentPropsWithRef<C>["ref"]> extends Ref<infer Instance>\n            ? Instance\n            : never\n          : never;\n    \n      type ComponentState = any;\n    \n      type Key = string | number;\n    \n      /**\n       * @internal You shouldn\'t need to use this type since you never see these attributes\n       * inside your component or have to validate them.\n       */\n      interface Attributes {\n        key?: Key | null | undefined;\n      }\n      interface RefAttributes<T> extends Attributes {\n        ref?: Ref<T> | undefined;\n      }\n      interface ClassAttributes<T> extends Attributes {\n        ref?: LegacyRef<T> | undefined;\n      }\n    \n      interface ReactElement<\n        P = any,\n        T extends string | JSXElementConstructor<any> =\n          | string\n          | JSXElementConstructor<any>\n      > {\n        type: T;\n        props: P;\n        key: Key | null;\n      }\n    \n      interface ReactComponentElement<\n        T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>,\n        P = Pick<ComponentProps<T>, Exclude<keyof ComponentProps<T>, "key" | "ref">>\n      > extends ReactElement<P, Exclude<T, number>> {}\n    \n      interface FunctionComponentElement<P>\n        extends ReactElement<P, FunctionComponent<P>> {\n        ref?:\n          | ("ref" extends keyof P\n              ? P extends { ref?: infer R | undefined }\n                ? R\n                : never\n              : never)\n          | undefined;\n      }\n    \n      type CElement<P, T extends Component<P, ComponentState>> = ComponentElement<\n        P,\n        T\n      >;\n      interface ComponentElement<P, T extends Component<P, ComponentState>>\n        extends ReactElement<P, ComponentClass<P>> {\n        ref?: LegacyRef<T> | undefined;\n      }\n    \n      type ClassicElement<P> = CElement<P, ClassicComponent<P, ComponentState>>;\n    \n      // string fallback for custom web-components\n      interface DOMElement<\n        P extends HTMLAttributes<T> | SVGAttributes<T>,\n        T extends Element\n      > extends ReactElement<P, string> {\n        ref: LegacyRef<T>;\n      }\n    \n      // ReactHTML for ReactHTMLElement\n      interface ReactHTMLElement<T extends HTMLElement>\n        extends DetailedReactHTMLElement<AllHTMLAttributes<T>, T> {}\n    \n      interface DetailedReactHTMLElement<\n        P extends HTMLAttributes<T>,\n        T extends HTMLElement\n      > extends DOMElement<P, T> {\n        type: keyof ReactHTML;\n      }\n    \n      // ReactSVG for ReactSVGElement\n      interface ReactSVGElement\n        extends DOMElement<SVGAttributes<SVGElement>, SVGElement> {\n        type: keyof ReactSVG;\n      }\n    \n      interface ReactPortal extends ReactElement {\n        key: Key | null;\n        children: ReactNode;\n      }\n    \n      //\n      // Factories\n      // ----------------------------------------------------------------------\n    \n      type Factory<P> = (\n        props?: Attributes & P,\n        ...children: ReactNode[]\n      ) => ReactElement<P>;\n    \n      /**\n       * @deprecated Please use \'FunctionComponentFactory\'\n       */\n      type SFCFactory<P> = FunctionComponentFactory<P>;\n    \n      type FunctionComponentFactory<P> = (\n        props?: Attributes & P,\n        ...children: ReactNode[]\n      ) => FunctionComponentElement<P>;\n    \n      type ComponentFactory<P, T extends Component<P, ComponentState>> = (\n        props?: ClassAttributes<T> & P,\n        ...children: ReactNode[]\n      ) => CElement<P, T>;\n    \n      type CFactory<P, T extends Component<P, ComponentState>> = ComponentFactory<\n        P,\n        T\n      >;\n      type ClassicFactory<P> = CFactory<P, ClassicComponent<P, ComponentState>>;\n    \n      type DOMFactory<P extends DOMAttributes<T>, T extends Element> = (\n        props?: (ClassAttributes<T> & P) | null,\n        ...children: ReactNode[]\n      ) => DOMElement<P, T>;\n    \n      interface HTMLFactory<T extends HTMLElement>\n        extends DetailedHTMLFactory<AllHTMLAttributes<T>, T> {}\n    \n      interface DetailedHTMLFactory<\n        P extends HTMLAttributes<T>,\n        T extends HTMLElement\n      > extends DOMFactory<P, T> {\n        (\n          props?: (ClassAttributes<T> & P) | null,\n          ...children: ReactNode[]\n        ): DetailedReactHTMLElement<P, T>;\n      }\n    \n      interface SVGFactory\n        extends DOMFactory<SVGAttributes<SVGElement>, SVGElement> {\n        (\n          props?: (ClassAttributes<SVGElement> & SVGAttributes<SVGElement>) | null,\n          ...children: ReactNode[]\n        ): ReactSVGElement;\n      }\n    \n      /**\n       * @deprecated - This type is not relevant when using React. Inline the type instead to make the intent clear.\n       */\n      type ReactText = string | number;\n      /**\n       * @deprecated - This type is not relevant when using React. Inline the type instead to make the intent clear.\n       */\n      type ReactChild = ReactElement | string | number;\n    \n      /**\n       * @deprecated Use either \'ReactNode[]\' if you need an array or \'Iterable<ReactNode>\' if its passed to a host component.\n       */\n      interface ReactNodeArray extends ReadonlyArray<ReactNode> {}\n      type ReactFragment = Iterable<ReactNode>;\n      type ReactNode =\n        | ReactElement\n        | string\n        | number\n        | ReactFragment\n        | ReactPortal\n        | boolean\n        | null\n        | undefined;\n    \n      //\n      // Top Level API\n      // ----------------------------------------------------------------------\n    \n      // DOM Elements\n      function createFactory<T extends HTMLElement>(\n        type: keyof ReactHTML\n      ): HTMLFactory<T>;\n      function createFactory(type: keyof ReactSVG): SVGFactory;\n      function createFactory<P extends DOMAttributes<T>, T extends Element>(\n        type: string\n      ): DOMFactory<P, T>;\n    \n      // Custom components\n      function createFactory<P>(\n        type: FunctionComponent<P>\n      ): FunctionComponentFactory<P>;\n      function createFactory<P>(\n        type: ClassType<\n          P,\n          ClassicComponent<P, ComponentState>,\n          ClassicComponentClass<P>\n        >\n      ): CFactory<P, ClassicComponent<P, ComponentState>>;\n      function createFactory<\n        P,\n        T extends Component<P, ComponentState>,\n        C extends ComponentClass<P>\n      >(type: ClassType<P, T, C>): CFactory<P, T>;\n      function createFactory<P>(type: ComponentClass<P>): Factory<P>;\n    \n      // DOM Elements\n      // TODO: generalize this to everything in \'keyof ReactHTML\', not just "input"\n      function createElement(\n        type: "input",\n        props?:\n          | (InputHTMLAttributes<HTMLInputElement> &\n              ClassAttributes<HTMLInputElement>)\n          | null,\n        ...children: ReactNode[]\n      ): DetailedReactHTMLElement<\n        InputHTMLAttributes<HTMLInputElement>,\n        HTMLInputElement\n      >;\n      function createElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        type: keyof ReactHTML,\n        props?: (ClassAttributes<T> & P) | null,\n        ...children: ReactNode[]\n      ): DetailedReactHTMLElement<P, T>;\n      function createElement<P extends SVGAttributes<T>, T extends SVGElement>(\n        type: keyof ReactSVG,\n        props?: (ClassAttributes<T> & P) | null,\n        ...children: ReactNode[]\n      ): ReactSVGElement;\n      function createElement<P extends DOMAttributes<T>, T extends Element>(\n        type: string,\n        props?: (ClassAttributes<T> & P) | null,\n        ...children: ReactNode[]\n      ): DOMElement<P, T>;\n    \n      // Custom components\n    \n      function createElement<P extends {}>(\n        type: FunctionComponent<P>,\n        props?: (Attributes & P) | null,\n        ...children: ReactNode[]\n      ): FunctionComponentElement<P>;\n      function createElement<P extends {}>(\n        type: ClassType<\n          P,\n          ClassicComponent<P, ComponentState>,\n          ClassicComponentClass<P>\n        >,\n        props?: (ClassAttributes<ClassicComponent<P, ComponentState>> & P) | null,\n        ...children: ReactNode[]\n      ): CElement<P, ClassicComponent<P, ComponentState>>;\n      function createElement<\n        P extends {},\n        T extends Component<P, ComponentState>,\n        C extends ComponentClass<P>\n      >(\n        type: ClassType<P, T, C>,\n        props?: (ClassAttributes<T> & P) | null,\n        ...children: ReactNode[]\n      ): CElement<P, T>;\n      function createElement<P extends {}>(\n        type: FunctionComponent<P> | ComponentClass<P> | string,\n        props?: (Attributes & P) | null,\n        ...children: ReactNode[]\n      ): ReactElement<P>;\n    \n      // DOM Elements\n      // ReactHTMLElement\n      function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        element: DetailedReactHTMLElement<P, T>,\n        props?: P,\n        ...children: ReactNode[]\n      ): DetailedReactHTMLElement<P, T>;\n      // ReactHTMLElement, less specific\n      function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        element: ReactHTMLElement<T>,\n        props?: P,\n        ...children: ReactNode[]\n      ): ReactHTMLElement<T>;\n      // SVGElement\n      function cloneElement<P extends SVGAttributes<T>, T extends SVGElement>(\n        element: ReactSVGElement,\n        props?: P,\n        ...children: ReactNode[]\n      ): ReactSVGElement;\n      // DOM Element (has to be the last, because type checking stops at first overload that fits)\n      function cloneElement<P extends DOMAttributes<T>, T extends Element>(\n        element: DOMElement<P, T>,\n        props?: DOMAttributes<T> & P,\n        ...children: ReactNode[]\n      ): DOMElement<P, T>;\n    \n      // Custom components\n      function cloneElement<P>(\n        element: FunctionComponentElement<P>,\n        props?: Partial<P> & Attributes,\n        ...children: ReactNode[]\n      ): FunctionComponentElement<P>;\n      function cloneElement<P, T extends Component<P, ComponentState>>(\n        element: CElement<P, T>,\n        props?: Partial<P> & ClassAttributes<T>,\n        ...children: ReactNode[]\n      ): CElement<P, T>;\n      function cloneElement<P>(\n        element: ReactElement<P>,\n        props?: Partial<P> & Attributes,\n        ...children: ReactNode[]\n      ): ReactElement<P>;\n    \n      // Context via RenderProps\n      interface ProviderProps<T> {\n        value: T;\n        children?: ReactNode | undefined;\n      }\n    \n      interface ConsumerProps<T> {\n        children: (value: T) => ReactNode;\n      }\n    \n      // TODO: similar to how Fragment is actually a symbol, the values returned from createContext,\n      // forwardRef and memo are actually objects that are treated specially by the renderer; see:\n      // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/ReactContext.js#L35-L48\n      // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/forwardRef.js#L42-L45\n      // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/memo.js#L27-L31\n      // However, we have no way of telling the JSX parser that it\'s a JSX element type or its props other than\n      // by pretending to be a normal component.\n      //\n      // We don\'t just use ComponentType or FunctionComponent types because you are not supposed to attach statics to this\n      // object, but rather to the original function.\n      interface ExoticComponent<P = {}> {\n        /**\n         * **NOTE**: Exotic components are not callable.\n         */\n        (props: P): ReactElement | null;\n        readonly $$typeof: symbol;\n      }\n    \n      interface NamedExoticComponent<P = {}> extends ExoticComponent<P> {\n        displayName?: string | undefined;\n      }\n    \n      interface ProviderExoticComponent<P> extends ExoticComponent<P> {\n        propTypes?: WeakValidationMap<P> | undefined;\n      }\n    \n      type ContextType<C extends Context<any>> = C extends Context<infer T>\n        ? T\n        : never;\n    \n      // NOTE: only the Context object itself can get a displayName\n      // https://github.com/facebook/react-devtools/blob/e0b854e4c/backend/attachRendererFiber.js#L310-L325\n      type Provider<T> = ProviderExoticComponent<ProviderProps<T>>;\n      type Consumer<T> = ExoticComponent<ConsumerProps<T>>;\n      interface Context<T> {\n        Provider: Provider<T>;\n        Consumer: Consumer<T>;\n        displayName?: string | undefined;\n      }\n      function createContext<T>(\n        // If you thought this should be optional, see\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24509#issuecomment-382213106\n        defaultValue: T\n      ): Context<T>;\n    \n      function isValidElement<P>(\n        object: {} | null | undefined\n      ): object is ReactElement<P>;\n    \n      // Sync with \'ReactChildren\' until \'ReactChildren\' is removed.\n      const Children: {\n        map<T, C>(\n          children: C | ReadonlyArray<C>,\n          fn: (child: C, index: number) => T\n        ): C extends null | undefined\n          ? C\n          : Array<Exclude<T, boolean | null | undefined>>;\n        forEach<C>(\n          children: C | ReadonlyArray<C>,\n          fn: (child: C, index: number) => void\n        ): void;\n        count(children: any): number;\n        only<C>(children: C): C extends any[] ? never : C;\n        toArray(\n          children: ReactNode | ReactNode[]\n        ): Array<Exclude<ReactNode, boolean | null | undefined>>;\n      };\n      const Fragment: ExoticComponent<{ children?: ReactNode | undefined }>;\n      const StrictMode: ExoticComponent<{ children?: ReactNode | undefined }>;\n    \n      interface SuspenseProps {\n        children?: ReactNode | undefined;\n    \n        /** A fallback react tree to show when a Suspense child (like React.lazy) suspends */\n        fallback?: ReactNode;\n      }\n    \n      const Suspense: ExoticComponent<SuspenseProps>;\n      const version: string;\n    \n      /**\n       * {@link https://reactjs.org/docs/profiler.html#onrender-callback Profiler API}\n       */\n      type ProfilerOnRenderCallback = (\n        id: string,\n        phase: "mount" | "update",\n        actualDuration: number,\n        baseDuration: number,\n        startTime: number,\n        commitTime: number,\n        interactions: Set<SchedulerInteraction>\n      ) => void;\n      interface ProfilerProps {\n        children?: ReactNode | undefined;\n        id: string;\n        onRender: ProfilerOnRenderCallback;\n      }\n    \n      const Profiler: ExoticComponent<ProfilerProps>;\n    \n      //\n      // Component API\n      // ----------------------------------------------------------------------\n    \n      type ReactInstance = Component<any> | Element;\n    \n      // Base component for plain JS classes\n      interface Component<P = {}, S = {}, SS = any>\n        extends ComponentLifecycle<P, S, SS> {}\n      class Component<P, S> {\n        // tslint won\'t let me format the sample code in a way that vscode likes it :(\n        /**\n         * If set, \'this.context\' will be set at runtime to the current value of the given Context.\n         *\n         * Usage:\n         *\n         * \'\'\'ts\n         * type MyContext = number\n         * const Ctx = React.createContext<MyContext>(0)\n         *\n         * class Foo extends React.Component {\n         *   static contextType = Ctx\n         *   context!: React.ContextType<typeof Ctx>\n         *   render () {\n         *     return <>My context\'s value: {this.context}</>;\n         *   }\n         * }\n         * \'\'\'\n         *\n         * @see https://reactjs.org/docs/context.html#classcontexttype\n         */\n        static contextType?: Context<any> | undefined;\n    \n        /**\n         * If using the new style context, re-declare this in your class to be the\n         * \'React.ContextType\' of your \'static contextType\'.\n         * Should be used with type annotation or static contextType.\n         *\n         * \'\'\'ts\n         * static contextType = MyContext\n         * // For TS pre-3.7:\n         * context!: React.ContextType<typeof MyContext>\n         * // For TS 3.7 and above:\n         * declare context: React.ContextType<typeof MyContext>\n         * \'\'\'\n         *\n         * @see https://reactjs.org/docs/context.html\n         */\n        context: unknown;\n    \n        constructor(props: Readonly<P> | P);\n        /**\n         * @deprecated\n         * @see https://reactjs.org/docs/legacy-context.html\n         */\n        constructor(props: P, context: any);\n    \n        // We MUST keep setState() as a unified signature because it allows proper checking of the method return type.\n        // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365#issuecomment-351013257\n        // Also, the \' | S\' allows intellisense to not be dumbisense\n        setState<K extends keyof S>(\n          state:\n            | ((\n                prevState: Readonly<S>,\n                props: Readonly<P>\n              ) => Pick<S, K> | S | null)\n            | (Pick<S, K> | S | null),\n          callback?: () => void\n        ): void;\n    \n        forceUpdate(callback?: () => void): void;\n        render(): ReactNode;\n    \n        readonly props: Readonly<P>;\n        state: Readonly<S>;\n        /**\n         * @deprecated\n         * https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n         */\n        refs: {\n          [key: string]: ReactInstance;\n        };\n      }\n    \n      class PureComponent<P = {}, S = {}, SS = any> extends Component<P, S, SS> {}\n    \n      interface ClassicComponent<P = {}, S = {}> extends Component<P, S> {\n        replaceState(nextState: S, callback?: () => void): void;\n        isMounted(): boolean;\n        getInitialState?(): S;\n      }\n    \n      interface ChildContextProvider<CC> {\n        getChildContext(): CC;\n      }\n    \n      //\n      // Class Interfaces\n      // ----------------------------------------------------------------------\n    \n      type FC<P = {}> = FunctionComponent<P>;\n    \n      interface FunctionComponent<P = {}> {\n        (props: P, context?: any): ReactElement<any, any> | null;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n      }\n    \n      /**\n       * @deprecated - Equivalent with \'React.FC\'.\n       */\n      type VFC<P = {}> = VoidFunctionComponent<P>;\n    \n      /**\n       * @deprecated - Equivalent with \'React.FunctionComponent\'.\n       */\n      interface VoidFunctionComponent<P = {}> {\n        (props: P, context?: any): ReactElement<any, any> | null;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n      }\n    \n      type ForwardedRef<T> =\n        | ((instance: T | null) => void)\n        | MutableRefObject<T | null>\n        | null;\n    \n      interface ForwardRefRenderFunction<T, P = {}> {\n        (props: P, ref: ForwardedRef<T>): ReactElement | null;\n        displayName?: string | undefined;\n        // explicit rejected with \'never\' required due to\n        // https://github.com/microsoft/TypeScript/issues/36826\n        /**\n         * defaultProps are not supported on render functions\n         */\n        defaultProps?: never | undefined;\n        /**\n         * propTypes are not supported on render functions\n         */\n        propTypes?: never | undefined;\n      }\n    \n      interface ComponentClass<P = {}, S = ComponentState>\n        extends StaticLifecycle<P, S> {\n        new (props: P, context?: any): Component<P, S>;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextType?: Context<any> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        childContextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n      }\n    \n      interface ClassicComponentClass<P = {}> extends ComponentClass<P> {\n        new (props: P, context?: any): ClassicComponent<P, ComponentState>;\n        getDefaultProps?(): P;\n      }\n    \n      /**\n       * We use an intersection type to infer multiple type parameters from\n       * a single argument, which is useful for many top-level API defs.\n       * See https://github.com/Microsoft/TypeScript/issues/7234 for more info.\n       */\n      type ClassType<\n        P,\n        T extends Component<P, ComponentState>,\n        C extends ComponentClass<P>\n      > = C & (new (props: P, context?: any) => T);\n    \n      //\n      // Component Specs and Lifecycle\n      // ----------------------------------------------------------------------\n    \n      // This should actually be something like \'Lifecycle<P, S> | DeprecatedLifecycle<P, S>\',\n      // as React will _not_ call the deprecated lifecycle methods if any of the new lifecycle\n      // methods are present.\n      interface ComponentLifecycle<P, S, SS = any>\n        extends NewLifecycle<P, S, SS>,\n          DeprecatedLifecycle<P, S> {\n        /**\n         * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n         */\n        componentDidMount?(): void;\n        /**\n         * Called to determine whether the change in props and state should trigger a re-render.\n         *\n         * \'Component\' always returns true.\n         * \'PureComponent\' implements a shallow comparison on props and state and returns true if any\n         * props or states have changed.\n         *\n         * If false is returned, \'Component#render\', \'componentWillUpdate\'\n         * and \'componentDidUpdate\' will not be called.\n         */\n        shouldComponentUpdate?(\n          nextProps: Readonly<P>,\n          nextState: Readonly<S>,\n          nextContext: any\n        ): boolean;\n        /**\n         * Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\n         * cancelled network requests, or cleaning up any DOM elements created in \'componentDidMount\'.\n         */\n        componentWillUnmount?(): void;\n        /**\n         * Catches exceptions generated in descendant components. Unhandled exceptions will cause\n         * the entire component tree to unmount.\n         */\n        componentDidCatch?(error: Error, errorInfo: ErrorInfo): void;\n      }\n    \n      // Unfortunately, we have no way of declaring that the component constructor must implement this\n      interface StaticLifecycle<P, S> {\n        getDerivedStateFromProps?: GetDerivedStateFromProps<P, S> | undefined;\n        getDerivedStateFromError?: GetDerivedStateFromError<P, S> | undefined;\n      }\n    \n      type GetDerivedStateFromProps<P, S> =\n        /**\n         * Returns an update to a component\'s state based on its new props and old state.\n         *\n         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked\n         */\n        (nextProps: Readonly<P>, prevState: S) => Partial<S> | null;\n    \n      type GetDerivedStateFromError<P, S> =\n        /**\n         * This lifecycle is invoked after an error has been thrown by a descendant component.\n         * It receives the error that was thrown as a parameter and should return a value to update state.\n         *\n         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked\n         */\n        (error: any) => Partial<S> | null;\n    \n      // This should be "infer SS" but can\'t use it yet\n      interface NewLifecycle<P, S, SS> {\n        /**\n         * Runs before React applies the result of \'render\' to the document, and\n         * returns an object to be given to componentDidUpdate. Useful for saving\n         * things such as scroll position before \'render\' causes changes to it.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\n         * lifecycle events from running.\n         */\n        getSnapshotBeforeUpdate?(\n          prevProps: Readonly<P>,\n          prevState: Readonly<S>\n        ): SS | null;\n        /**\n         * Called immediately after updating occurs. Not called for the initial render.\n         *\n         * The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n         */\n        componentDidUpdate?(\n          prevProps: Readonly<P>,\n          prevState: Readonly<S>,\n          snapshot?: SS\n        ): void;\n      }\n    \n      interface DeprecatedLifecycle<P, S> {\n        /**\n         * Called immediately before mounting occurs, and before \'Component#render\'.\n         * Avoid introducing any side-effects or subscriptions in this method.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use componentDidMount or the constructor instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillMount?(): void;\n        /**\n         * Called immediately before mounting occurs, and before \'Component#render\'.\n         * Avoid introducing any side-effects or subscriptions in this method.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use componentDidMount or the constructor instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillMount?(): void;\n        /**\n         * Called when the component may be receiving new props.\n         * React may call this even if props have not changed, so be sure to compare new and existing\n         * props if you only want to handle changes.\n         *\n         * Calling \'Component#setState\' generally does not trigger this method.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use static getDerivedStateFromProps instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\n        /**\n         * Called when the component may be receiving new props.\n         * React may call this even if props have not changed, so be sure to compare new and existing\n         * props if you only want to handle changes.\n         *\n         * Calling \'Component#setState\' generally does not trigger this method.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use static getDerivedStateFromProps instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillReceiveProps?(\n          nextProps: Readonly<P>,\n          nextContext: any\n        ): void;\n        /**\n         * Called immediately before rendering when new props or state is received. Not called for the initial render.\n         *\n         * Note: You cannot call \'Component#setState\' here.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillUpdate?(\n          nextProps: Readonly<P>,\n          nextState: Readonly<S>,\n          nextContext: any\n        ): void;\n        /**\n         * Called immediately before rendering when new props or state is received. Not called for the initial render.\n         *\n         * Note: You cannot call \'Component#setState\' here.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use getSnapshotBeforeUpdate instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillUpdate?(\n          nextProps: Readonly<P>,\n          nextState: Readonly<S>,\n          nextContext: any\n        ): void;\n      }\n    \n      interface Mixin<P, S> extends ComponentLifecycle<P, S> {\n        mixins?: Array<Mixin<P, S>> | undefined;\n        statics?:\n          | {\n              [key: string]: any;\n            }\n          | undefined;\n    \n        displayName?: string | undefined;\n        propTypes?: ValidationMap<any> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        childContextTypes?: ValidationMap<any> | undefined;\n    \n        getDefaultProps?(): P;\n        getInitialState?(): S;\n      }\n    \n      interface ComponentSpec<P, S> extends Mixin<P, S> {\n        render(): ReactNode;\n    \n        [propertyName: string]: any;\n      }\n    \n      function createRef<T>(): RefObject<T>;\n    \n      interface ForwardRefExoticComponent<P> extends NamedExoticComponent<P> {\n        defaultProps?: Partial<P> | undefined;\n        propTypes?: WeakValidationMap<P> | undefined;\n      }\n    \n      function forwardRef<T, P = {}>(\n        render: ForwardRefRenderFunction<T, P>\n      ): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n    \n      /** Ensures that the props do not include ref at all */\n      type PropsWithoutRef<P> =\n        // Pick would not be sufficient for this. We\'d like to avoid unnecessary mapping and need a distributive conditional to support unions.\n        // see: https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n        // https://github.com/Microsoft/TypeScript/issues/28339\n        P extends any\n          ? "ref" extends keyof P\n            ? Pick<P, Exclude<keyof P, "ref">>\n            : P\n          : P;\n      /** Ensures that the props do not include string ref, which cannot be forwarded */\n      type PropsWithRef<P> =\n        // Just "P extends { ref?: infer R }" looks sufficient, but R will infer as {} if P is {}.\n        "ref" extends keyof P\n          ? P extends { ref?: infer R | undefined }\n            ? string extends R\n              ? PropsWithoutRef<P> & { ref?: Exclude<R, string> | undefined }\n              : P\n            : P\n          : P;\n    \n      type PropsWithChildren<P = unknown> = P & {\n        children?: ReactNode | undefined;\n      };\n    \n      /**\n       * NOTE: prefer ComponentPropsWithRef, if the ref is forwarded,\n       * or ComponentPropsWithoutRef when refs are not supported.\n       */\n      type ComponentProps<\n        T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>\n      > = T extends JSXElementConstructor<infer P>\n        ? P\n        : T extends keyof JSX.IntrinsicElements\n        ? JSX.IntrinsicElements[T]\n        : {};\n      type ComponentPropsWithRef<T extends ElementType> = T extends new (\n        props: infer P\n      ) => Component<any, any>\n        ? PropsWithoutRef<P> & RefAttributes<InstanceType<T>>\n        : PropsWithRef<ComponentProps<T>>;\n      type ComponentPropsWithoutRef<T extends ElementType> = PropsWithoutRef<\n        ComponentProps<T>\n      >;\n    \n      type ComponentRef<T extends ElementType> = T extends NamedExoticComponent<\n        ComponentPropsWithoutRef<T> & RefAttributes<infer Method>\n      >\n        ? Method\n        : ComponentPropsWithRef<T> extends RefAttributes<infer Method>\n        ? Method\n        : never;\n    \n      type MemoExoticComponent<T extends ComponentType<any>> = NamedExoticComponent<\n        ComponentPropsWithRef<T>\n      > & {\n        readonly type: T;\n      };\n    \n      function memo<P extends object>(\n        Component: FunctionComponent<P>,\n        propsAreEqual?: (prevProps: Readonly<P>, nextProps: Readonly<P>) => boolean\n      ): NamedExoticComponent<P>;\n      function memo<T extends ComponentType<any>>(\n        Component: T,\n        propsAreEqual?: (\n          prevProps: Readonly<ComponentProps<T>>,\n          nextProps: Readonly<ComponentProps<T>>\n        ) => boolean\n      ): MemoExoticComponent<T>;\n    \n      type LazyExoticComponent<T extends ComponentType<any>> = ExoticComponent<\n        ComponentPropsWithRef<T>\n      > & {\n        readonly _result: T;\n      };\n    \n      function lazy<T extends ComponentType<any>>(\n        factory: () => Promise<{ default: T }>\n      ): LazyExoticComponent<T>;\n    \n      //\n      // React Hooks\n      // ----------------------------------------------------------------------\n    \n      // based on the code in https://github.com/facebook/react/pull/13968\n    \n      // Unlike the class component setState, the updates are not allowed to be partial\n      type SetStateAction<S> = S | ((prevState: S) => S);\n      // this technically does accept a second argument, but it\'s already under a deprecation warning\n      // and it\'s not even released so probably better to not define it.\n      type Dispatch<A> = (value: A) => void;\n      // Since action _can_ be undefined, dispatch may be called without any parameters.\n      type DispatchWithoutAction = () => void;\n      // Unlike redux, the actions _can_ be anything\n      type Reducer<S, A> = (prevState: S, action: A) => S;\n      // If useReducer accepts a reducer without action, dispatch may be called without any parameters.\n      type ReducerWithoutAction<S> = (prevState: S) => S;\n      // types used to try and prevent the compiler from reducing S\n      // to a supertype common with the second argument to useReducer()\n      type ReducerState<R extends Reducer<any, any>> = R extends Reducer<\n        infer S,\n        any\n      >\n        ? S\n        : never;\n      type ReducerAction<R extends Reducer<any, any>> = R extends Reducer<\n        any,\n        infer A\n      >\n        ? A\n        : never;\n      // The identity check is done with the SameValue algorithm (Object.is), which is stricter than ===\n      type ReducerStateWithoutAction<R extends ReducerWithoutAction<any>> =\n        R extends ReducerWithoutAction<infer S> ? S : never;\n      type DependencyList = ReadonlyArray<unknown>;\n    \n      // NOTE: callbacks are _only_ allowed to return either void, or a destructor.\n      type EffectCallback = () => void | Destructor;\n    \n      interface MutableRefObject<T> {\n        current: T;\n      }\n    \n      // This will technically work if you give a Consumer<T> or Provider<T> but it\'s deprecated and warns\n      /**\n       * Accepts a context object (the value returned from \'React.createContext\') and returns the current\n       * context value, as given by the nearest context provider for the given context.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usecontext\n       */\n      function useContext<T>(\n        context: Context<T> /*, (not public API) observedBits?: number|boolean */\n      ): T;\n      /**\n       * Returns a stateful value, and a function to update it.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usestate\n       */\n      function useState<S>(\n        initialState: S | (() => S)\n      ): [S, Dispatch<SetStateAction<S>>];\n      // convenience overload when first argument is omitted\n      /**\n       * Returns a stateful value, and a function to update it.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usestate\n       */\n      function useState<S = undefined>(): [\n        S | undefined,\n        Dispatch<SetStateAction<S | undefined>>\n      ];\n      /**\n       * An alternative to \'useState\'.\n       *\n       * \'useReducer\' is usually preferable to \'useState\' when you have complex state logic that involves\n       * multiple sub-values. It also lets you optimize performance for components that trigger deep\n       * updates because you can pass \'dispatch\' down instead of callbacks.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n       */\n      // overload where dispatch could accept 0 arguments.\n      function useReducer<R extends ReducerWithoutAction<any>, I>(\n        reducer: R,\n        initializerArg: I,\n        initializer: (arg: I) => ReducerStateWithoutAction<R>\n      ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\n      /**\n       * An alternative to \'useState\'.\n       *\n       * \'useReducer\' is usually preferable to \'useState\' when you have complex state logic that involves\n       * multiple sub-values. It also lets you optimize performance for components that trigger deep\n       * updates because you can pass \'dispatch\' down instead of callbacks.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n       */\n      // overload where dispatch could accept 0 arguments.\n      function useReducer<R extends ReducerWithoutAction<any>>(\n        reducer: R,\n        initializerArg: ReducerStateWithoutAction<R>,\n        initializer?: undefined\n      ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\n      /**\n       * An alternative to \'useState\'.\n       *\n       * \'useReducer\' is usually preferable to \'useState\' when you have complex state logic that involves\n       * multiple sub-values. It also lets you optimize performance for components that trigger deep\n       * updates because you can pass \'dispatch\' down instead of callbacks.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n       */\n      // overload where "I" may be a subset of ReducerState<R>; used to provide autocompletion.\n      // If "I" matches ReducerState<R> exactly then the last overload will allow initializer to be omitted.\n      // the last overload effectively behaves as if the identity function (x => x) is the initializer.\n      function useReducer<R extends Reducer<any, any>, I>(\n        reducer: R,\n        initializerArg: I & ReducerState<R>,\n        initializer: (arg: I & ReducerState<R>) => ReducerState<R>\n      ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n      /**\n       * An alternative to \'useState\'.\n       *\n       * \'useReducer\' is usually preferable to \'useState\' when you have complex state logic that involves\n       * multiple sub-values. It also lets you optimize performance for components that trigger deep\n       * updates because you can pass \'dispatch\' down instead of callbacks.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n       */\n      // overload for free "I"; all goes as long as initializer converts it into "ReducerState<R>".\n      function useReducer<R extends Reducer<any, any>, I>(\n        reducer: R,\n        initializerArg: I,\n        initializer: (arg: I) => ReducerState<R>\n      ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n      /**\n       * An alternative to \'useState\'.\n       *\n       * \'useReducer\' is usually preferable to \'useState\' when you have complex state logic that involves\n       * multiple sub-values. It also lets you optimize performance for components that trigger deep\n       * updates because you can pass \'dispatch\' down instead of callbacks.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n       */\n    \n      // I\'m not sure if I keep this 2-ary or if I make it (2,3)-ary; it\'s currently (2,3)-ary.\n      // The Flow types do have an overload for 3-ary invocation with undefined initializer.\n    \n      // NOTE: without the ReducerState indirection, TypeScript would reduce S to be the most common\n      // supertype between the reducer\'s return type and the initialState (or the initializer\'s return type),\n      // which would prevent autocompletion from ever working.\n    \n      // TODO: double-check if this weird overload logic is necessary. It is possible it\'s either a bug\n      // in older versions, or a regression in newer versions of the typescript completion service.\n      function useReducer<R extends Reducer<any, any>>(\n        reducer: R,\n        initialState: ReducerState<R>,\n        initializer?: undefined\n      ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n      /**\n       * \'useRef\' returns a mutable ref object whose \'.current\' property is initialized to the passed argument\n       * (\'initialValue\'). The returned object will persist for the full lifetime of the component.\n       *\n       * Note that \'useRef()\' is useful for more than the \'ref\' attribute. It’s handy for keeping any mutable\n       * value around similar to how you’d use instance fields in classes.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#useref\n       */\n      function useRef<T>(initialValue: T): MutableRefObject<T>;\n      // convenience overload for refs given as a ref prop as they typically start with a null value\n      /**\n       * \'useRef\' returns a mutable ref object whose \'.current\' property is initialized to the passed argument\n       * (\'initialValue\'). The returned object will persist for the full lifetime of the component.\n       *\n       * Note that \'useRef()\' is useful for more than the \'ref\' attribute. It’s handy for keeping any mutable\n       * value around similar to how you’d use instance fields in classes.\n       *\n       * Usage note: if you need the result of useRef to be directly mutable, include \'| null\' in the type\n       * of the generic argument.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#useref\n       */\n      function useRef<T>(initialValue: T | null): RefObject<T>;\n      // convenience overload for potentially undefined initialValue / call with 0 arguments\n      // has a default to stop it from defaulting to {} instead\n      /**\n       * \'useRef\' returns a mutable ref object whose \'.current\' property is initialized to the passed argument\n       * (\'initialValue\'). The returned object will persist for the full lifetime of the component.\n       *\n       * Note that \'useRef()\' is useful for more than the \'ref\' attribute. It’s handy for keeping any mutable\n       * value around similar to how you’d use instance fields in classes.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#useref\n       */\n      function useRef<T = undefined>(): MutableRefObject<T | undefined>;\n      /**\n       * The signature is identical to \'useEffect\', but it fires synchronously after all DOM mutations.\n       * Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside\n       * \'useLayoutEffect\' will be flushed synchronously, before the browser has a chance to paint.\n       *\n       * Prefer the standard \'useEffect\' when possible to avoid blocking visual updates.\n       *\n       * If you’re migrating code from a class component, \'useLayoutEffect\' fires in the same phase as\n       * \'componentDidMount\' and \'componentDidUpdate\'.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n       */\n      function useLayoutEffect(effect: EffectCallback, deps?: DependencyList): void;\n      /**\n       * Accepts a function that contains imperative, possibly effectful code.\n       *\n       * @param effect Imperative function that can return a cleanup function\n       * @param deps If present, effect will only activate if the values in the list change.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#useeffect\n       */\n      function useEffect(effect: EffectCallback, deps?: DependencyList): void;\n      // NOTE: this does not accept strings, but this will have to be fixed by removing strings from type Ref<T>\n      /**\n       * \'useImperativeHandle\' customizes the instance value that is exposed to parent components when using\n       * \'ref\'. As always, imperative code using refs should be avoided in most cases.\n       *\n       * \'useImperativeHandle\' should be used with \'React.forwardRef\'.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#useimperativehandle\n       */\n      function useImperativeHandle<T, R extends T>(\n        ref: Ref<T> | undefined,\n        init: () => R,\n        deps?: DependencyList\n      ): void;\n      // I made \'inputs\' required here and in useMemo as there\'s no point to memoizing without the memoization key\n      // useCallback(X) is identical to just using X, useMemo(() => Y) is identical to just using Y.\n      /**\n       * \'useCallback\' will return a memoized version of the callback that only changes if one of the \'inputs\'\n       * has changed.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usecallback\n       */\n      // A specific function type would not trigger implicit any.\n      // See https://github.com/DefinitelyTyped/DefinitelyTyped/issues/52873#issuecomment-845806435 for a comparison between \'Function\' and more specific types.\n      // tslint:disable-next-line ban-types\n      function useCallback<T extends Function>(\n        callback: T,\n        deps: DependencyList\n      ): T;\n      /**\n       * \'useMemo\' will only recompute the memoized value when one of the \'deps\' has changed.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usememo\n       */\n      // allow undefined, but don\'t make it optional as that is very likely a mistake\n      function useMemo<T>(factory: () => T, deps: DependencyList | undefined): T;\n      /**\n       * \'useDebugValue\' can be used to display a label for custom hooks in React DevTools.\n       *\n       * NOTE: We don’t recommend adding debug values to every custom hook.\n       * It’s most valuable for custom hooks that are part of shared libraries.\n       *\n       * @version 16.8.0\n       * @see https://reactjs.org/docs/hooks-reference.html#usedebugvalue\n       */\n      // the name of the custom hook is itself derived from the function name at runtime:\n      // it\'s just the function name without the "use" prefix.\n      function useDebugValue<T>(value: T, format?: (value: T) => any): void;\n    \n      // must be synchronous\n      export type TransitionFunction = () => VoidOrUndefinedOnly;\n      // strange definition to allow vscode to show documentation on the invocation\n      export interface TransitionStartFunction {\n        /**\n         * State updates caused inside the callback are allowed to be deferred.\n         *\n         * **If some state update causes a component to suspend, that state update should be wrapped in a transition.**\n         *\n         * @param callback A _synchronous_ function which causes state updates that can be deferred.\n         */\n        (callback: TransitionFunction): void;\n      }\n    \n      /**\n       * Returns a deferred version of the value that may “lag behind” it.\n       *\n       * This is commonly used to keep the interface responsive when you have something that renders immediately\n       * based on user input and something that needs to wait for a data fetch.\n       *\n       * A good example of this is a text input.\n       *\n       * @param value The value that is going to be deferred\n       *\n       * @see https://reactjs.org/docs/concurrent-mode-reference.html#usedeferredvalue\n       */\n      export function useDeferredValue<T>(value: T): T;\n    \n      /**\n       * Allows components to avoid undesirable loading states by waiting for content to load\n       * before transitioning to the next screen. It also allows components to defer slower,\n       * data fetching updates until subsequent renders so that more crucial updates can be\n       * rendered immediately.\n       *\n       * The \'useTransition\' hook returns two values in an array.\n       *\n       * The first is a boolean, React’s way of informing us whether we’re waiting for the transition to finish.\n       * The second is a function that takes a callback. We can use it to tell React which state we want to defer.\n       *\n       * **If some state update causes a component to suspend, that state update should be wrapped in a transition.**\'\n       *\n       * @see https://reactjs.org/docs/concurrent-mode-reference.html#usetransition\n       */\n      export function useTransition(): [boolean, TransitionStartFunction];\n    \n      /**\n       * Similar to \'useTransition\' but allows uses where hooks are not available.\n       *\n       * @param callback A _synchronous_ function which causes state updates that can be deferred.\n       */\n      export function startTransition(scope: TransitionFunction): void;\n    \n      export function useId(): string;\n    \n      /**\n       * @param effect Imperative function that can return a cleanup function\n       * @param deps If present, effect will only activate if the values in the list change.\n       *\n       * @see https://github.com/facebook/react/pull/21913\n       */\n      export function useInsertionEffect(\n        effect: EffectCallback,\n        deps?: DependencyList\n      ): void;\n    \n      /**\n       * @param subscribe\n       * @param getSnapshot\n       *\n       * @see https://github.com/reactwg/react-18/discussions/86\n       */\n      // keep in sync with \'useSyncExternalStore\' from \'use-sync-external-store\'\n      export function useSyncExternalStore<Snapshot>(\n        subscribe: (onStoreChange: () => void) => () => void,\n        getSnapshot: () => Snapshot,\n        getServerSnapshot?: () => Snapshot\n      ): Snapshot;\n    \n      //\n      // Event System\n      // ----------------------------------------------------------------------\n      // TODO: change any to unknown when moving to TS v3\n      interface BaseSyntheticEvent<E = object, C = any, T = any> {\n        nativeEvent: E;\n        currentTarget: C;\n        target: T;\n        bubbles: boolean;\n        cancelable: boolean;\n        defaultPrevented: boolean;\n        eventPhase: number;\n        isTrusted: boolean;\n        preventDefault(): void;\n        isDefaultPrevented(): boolean;\n        stopPropagation(): void;\n        isPropagationStopped(): boolean;\n        persist(): void;\n        timeStamp: number;\n        type: string;\n      }\n    \n      /**\n       * currentTarget - a reference to the element on which the event listener is registered.\n       *\n       * target - a reference to the element from which the event was originally dispatched.\n       * This might be a child element to the element on which the event listener is registered.\n       * If you thought this should be \'EventTarget & T\', see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/11508#issuecomment-256045682\n       */\n      interface SyntheticEvent<T = Element, E = Event>\n        extends BaseSyntheticEvent<E, EventTarget & T, EventTarget> {}\n    \n      interface ClipboardEvent<T = Element>\n        extends SyntheticEvent<T, NativeClipboardEvent> {\n        clipboardData: DataTransfer;\n      }\n    \n      interface CompositionEvent<T = Element>\n        extends SyntheticEvent<T, NativeCompositionEvent> {\n        data: string;\n      }\n    \n      interface DragEvent<T = Element> extends MouseEvent<T, NativeDragEvent> {\n        dataTransfer: DataTransfer;\n      }\n    \n      interface PointerEvent<T = Element>\n        extends MouseEvent<T, NativePointerEvent> {\n        pointerId: number;\n        pressure: number;\n        tangentialPressure: number;\n        tiltX: number;\n        tiltY: number;\n        twist: number;\n        width: number;\n        height: number;\n        pointerType: "mouse" | "pen" | "touch";\n        isPrimary: boolean;\n      }\n    \n      interface FocusEvent<Target = Element, RelatedTarget = Element>\n        extends SyntheticEvent<Target, NativeFocusEvent> {\n        relatedTarget: (EventTarget & RelatedTarget) | null;\n        target: EventTarget & Target;\n      }\n    \n      interface FormEvent<T = Element> extends SyntheticEvent<T> {}\n    \n      interface InvalidEvent<T = Element> extends SyntheticEvent<T> {\n        target: EventTarget & T;\n      }\n    \n      interface ChangeEvent<T = Element> extends SyntheticEvent<T> {\n        target: EventTarget & T;\n      }\n    \n      interface KeyboardEvent<T = Element> extends UIEvent<T, NativeKeyboardEvent> {\n        altKey: boolean;\n        /** @deprecated */\n        charCode: number;\n        ctrlKey: boolean;\n        code: string;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        /**\n         * See the [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#named-key-attribute-values). for possible values\n         */\n        key: string;\n        /** @deprecated */\n        keyCode: number;\n        locale: string;\n        location: number;\n        metaKey: boolean;\n        repeat: boolean;\n        shiftKey: boolean;\n        /** @deprecated */\n        which: number;\n      }\n    \n      interface MouseEvent<T = Element, E = NativeMouseEvent>\n        extends UIEvent<T, E> {\n        altKey: boolean;\n        button: number;\n        buttons: number;\n        clientX: number;\n        clientY: number;\n        ctrlKey: boolean;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        metaKey: boolean;\n        movementX: number;\n        movementY: number;\n        pageX: number;\n        pageY: number;\n        relatedTarget: EventTarget | null;\n        screenX: number;\n        screenY: number;\n        shiftKey: boolean;\n      }\n    \n      interface TouchEvent<T = Element> extends UIEvent<T, NativeTouchEvent> {\n        altKey: boolean;\n        changedTouches: TouchList;\n        ctrlKey: boolean;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        metaKey: boolean;\n        shiftKey: boolean;\n        targetTouches: TouchList;\n        touches: TouchList;\n      }\n    \n      interface UIEvent<T = Element, E = NativeUIEvent>\n        extends SyntheticEvent<T, E> {\n        detail: number;\n        view: AbstractView;\n      }\n    \n      interface WheelEvent<T = Element> extends MouseEvent<T, NativeWheelEvent> {\n        deltaMode: number;\n        deltaX: number;\n        deltaY: number;\n        deltaZ: number;\n      }\n    \n      interface AnimationEvent<T = Element>\n        extends SyntheticEvent<T, NativeAnimationEvent> {\n        animationName: string;\n        elapsedTime: number;\n        pseudoElement: string;\n      }\n    \n      interface TransitionEvent<T = Element>\n        extends SyntheticEvent<T, NativeTransitionEvent> {\n        elapsedTime: number;\n        propertyName: string;\n        pseudoElement: string;\n      }\n    \n      //\n      // Event Handler Types\n      // ----------------------------------------------------------------------\n    \n      type EventHandler<E extends SyntheticEvent<any>> = {\n        bivarianceHack(event: E): void;\n      }["bivarianceHack"];\n    \n      type ReactEventHandler<T = Element> = EventHandler<SyntheticEvent<T>>;\n    \n      type ClipboardEventHandler<T = Element> = EventHandler<ClipboardEvent<T>>;\n      type CompositionEventHandler<T = Element> = EventHandler<CompositionEvent<T>>;\n      type DragEventHandler<T = Element> = EventHandler<DragEvent<T>>;\n      type FocusEventHandler<T = Element> = EventHandler<FocusEvent<T>>;\n      type FormEventHandler<T = Element> = EventHandler<FormEvent<T>>;\n      type ChangeEventHandler<T = Element> = EventHandler<ChangeEvent<T>>;\n      type KeyboardEventHandler<T = Element> = EventHandler<KeyboardEvent<T>>;\n      type MouseEventHandler<T = Element> = EventHandler<MouseEvent<T>>;\n      type TouchEventHandler<T = Element> = EventHandler<TouchEvent<T>>;\n      type PointerEventHandler<T = Element> = EventHandler<PointerEvent<T>>;\n      type UIEventHandler<T = Element> = EventHandler<UIEvent<T>>;\n      type WheelEventHandler<T = Element> = EventHandler<WheelEvent<T>>;\n      type AnimationEventHandler<T = Element> = EventHandler<AnimationEvent<T>>;\n      type TransitionEventHandler<T = Element> = EventHandler<TransitionEvent<T>>;\n    \n      //\n      // Props / DOM Attributes\n      // ----------------------------------------------------------------------\n    \n      interface HTMLProps<T> extends AllHTMLAttributes<T>, ClassAttributes<T> {}\n    \n      type DetailedHTMLProps<E extends HTMLAttributes<T>, T> = ClassAttributes<T> &\n        E;\n    \n      interface SVGProps<T> extends SVGAttributes<T>, ClassAttributes<T> {}\n    \n      interface DOMAttributes<T> {\n        children?: ReactNode | undefined;\n        dangerouslySetInnerHTML?:\n          | {\n              __html: string;\n            }\n          | undefined;\n    \n        // Clipboard Events\n        onCopy?: ClipboardEventHandler<T> | undefined;\n        onCopyCapture?: ClipboardEventHandler<T> | undefined;\n        onCut?: ClipboardEventHandler<T> | undefined;\n        onCutCapture?: ClipboardEventHandler<T> | undefined;\n        onPaste?: ClipboardEventHandler<T> | undefined;\n        onPasteCapture?: ClipboardEventHandler<T> | undefined;\n    \n        // Composition Events\n        onCompositionEnd?: CompositionEventHandler<T> | undefined;\n        onCompositionEndCapture?: CompositionEventHandler<T> | undefined;\n        onCompositionStart?: CompositionEventHandler<T> | undefined;\n        onCompositionStartCapture?: CompositionEventHandler<T> | undefined;\n        onCompositionUpdate?: CompositionEventHandler<T> | undefined;\n        onCompositionUpdateCapture?: CompositionEventHandler<T> | undefined;\n    \n        // Focus Events\n        onFocus?: FocusEventHandler<T> | undefined;\n        onFocusCapture?: FocusEventHandler<T> | undefined;\n        onBlur?: FocusEventHandler<T> | undefined;\n        onBlurCapture?: FocusEventHandler<T> | undefined;\n    \n        // Form Events\n        onChange?: FormEventHandler<T> | undefined;\n        onChangeCapture?: FormEventHandler<T> | undefined;\n        onBeforeInput?: FormEventHandler<T> | undefined;\n        onBeforeInputCapture?: FormEventHandler<T> | undefined;\n        onInput?: FormEventHandler<T> | undefined;\n        onInputCapture?: FormEventHandler<T> | undefined;\n        onReset?: FormEventHandler<T> | undefined;\n        onResetCapture?: FormEventHandler<T> | undefined;\n        onSubmit?: FormEventHandler<T> | undefined;\n        onSubmitCapture?: FormEventHandler<T> | undefined;\n        onInvalid?: FormEventHandler<T> | undefined;\n        onInvalidCapture?: FormEventHandler<T> | undefined;\n    \n        // Image Events\n        onLoad?: ReactEventHandler<T> | undefined;\n        onLoadCapture?: ReactEventHandler<T> | undefined;\n        onError?: ReactEventHandler<T> | undefined; // also a Media Event\n        onErrorCapture?: ReactEventHandler<T> | undefined; // also a Media Event\n    \n        // Keyboard Events\n        onKeyDown?: KeyboardEventHandler<T> | undefined;\n        onKeyDownCapture?: KeyboardEventHandler<T> | undefined;\n        /** @deprecated */\n        onKeyPress?: KeyboardEventHandler<T> | undefined;\n        /** @deprecated */\n        onKeyPressCapture?: KeyboardEventHandler<T> | undefined;\n        onKeyUp?: KeyboardEventHandler<T> | undefined;\n        onKeyUpCapture?: KeyboardEventHandler<T> | undefined;\n    \n        // Media Events\n        onAbort?: ReactEventHandler<T> | undefined;\n        onAbortCapture?: ReactEventHandler<T> | undefined;\n        onCanPlay?: ReactEventHandler<T> | undefined;\n        onCanPlayCapture?: ReactEventHandler<T> | undefined;\n        onCanPlayThrough?: ReactEventHandler<T> | undefined;\n        onCanPlayThroughCapture?: ReactEventHandler<T> | undefined;\n        onDurationChange?: ReactEventHandler<T> | undefined;\n        onDurationChangeCapture?: ReactEventHandler<T> | undefined;\n        onEmptied?: ReactEventHandler<T> | undefined;\n        onEmptiedCapture?: ReactEventHandler<T> | undefined;\n        onEncrypted?: ReactEventHandler<T> | undefined;\n        onEncryptedCapture?: ReactEventHandler<T> | undefined;\n        onEnded?: ReactEventHandler<T> | undefined;\n        onEndedCapture?: ReactEventHandler<T> | undefined;\n        onLoadedData?: ReactEventHandler<T> | undefined;\n        onLoadedDataCapture?: ReactEventHandler<T> | undefined;\n        onLoadedMetadata?: ReactEventHandler<T> | undefined;\n        onLoadedMetadataCapture?: ReactEventHandler<T> | undefined;\n        onLoadStart?: ReactEventHandler<T> | undefined;\n        onLoadStartCapture?: ReactEventHandler<T> | undefined;\n        onPause?: ReactEventHandler<T> | undefined;\n        onPauseCapture?: ReactEventHandler<T> | undefined;\n        onPlay?: ReactEventHandler<T> | undefined;\n        onPlayCapture?: ReactEventHandler<T> | undefined;\n        onPlaying?: ReactEventHandler<T> | undefined;\n        onPlayingCapture?: ReactEventHandler<T> | undefined;\n        onProgress?: ReactEventHandler<T> | undefined;\n        onProgressCapture?: ReactEventHandler<T> | undefined;\n        onRateChange?: ReactEventHandler<T> | undefined;\n        onRateChangeCapture?: ReactEventHandler<T> | undefined;\n        onSeeked?: ReactEventHandler<T> | undefined;\n        onSeekedCapture?: ReactEventHandler<T> | undefined;\n        onSeeking?: ReactEventHandler<T> | undefined;\n        onSeekingCapture?: ReactEventHandler<T> | undefined;\n        onStalled?: ReactEventHandler<T> | undefined;\n        onStalledCapture?: ReactEventHandler<T> | undefined;\n        onSuspend?: ReactEventHandler<T> | undefined;\n        onSuspendCapture?: ReactEventHandler<T> | undefined;\n        onTimeUpdate?: ReactEventHandler<T> | undefined;\n        onTimeUpdateCapture?: ReactEventHandler<T> | undefined;\n        onVolumeChange?: ReactEventHandler<T> | undefined;\n        onVolumeChangeCapture?: ReactEventHandler<T> | undefined;\n        onWaiting?: ReactEventHandler<T> | undefined;\n        onWaitingCapture?: ReactEventHandler<T> | undefined;\n    \n        // MouseEvents\n        onAuxClick?: MouseEventHandler<T> | undefined;\n        onAuxClickCapture?: MouseEventHandler<T> | undefined;\n        onClick?: MouseEventHandler<T> | undefined;\n        onClickCapture?: MouseEventHandler<T> | undefined;\n        onContextMenu?: MouseEventHandler<T> | undefined;\n        onContextMenuCapture?: MouseEventHandler<T> | undefined;\n        onDoubleClick?: MouseEventHandler<T> | undefined;\n        onDoubleClickCapture?: MouseEventHandler<T> | undefined;\n        onDrag?: DragEventHandler<T> | undefined;\n        onDragCapture?: DragEventHandler<T> | undefined;\n        onDragEnd?: DragEventHandler<T> | undefined;\n        onDragEndCapture?: DragEventHandler<T> | undefined;\n        onDragEnter?: DragEventHandler<T> | undefined;\n        onDragEnterCapture?: DragEventHandler<T> | undefined;\n        onDragExit?: DragEventHandler<T> | undefined;\n        onDragExitCapture?: DragEventHandler<T> | undefined;\n        onDragLeave?: DragEventHandler<T> | undefined;\n        onDragLeaveCapture?: DragEventHandler<T> | undefined;\n        onDragOver?: DragEventHandler<T> | undefined;\n        onDragOverCapture?: DragEventHandler<T> | undefined;\n        onDragStart?: DragEventHandler<T> | undefined;\n        onDragStartCapture?: DragEventHandler<T> | undefined;\n        onDrop?: DragEventHandler<T> | undefined;\n        onDropCapture?: DragEventHandler<T> | undefined;\n        onMouseDown?: MouseEventHandler<T> | undefined;\n        onMouseDownCapture?: MouseEventHandler<T> | undefined;\n        onMouseEnter?: MouseEventHandler<T> | undefined;\n        onMouseLeave?: MouseEventHandler<T> | undefined;\n        onMouseMove?: MouseEventHandler<T> | undefined;\n        onMouseMoveCapture?: MouseEventHandler<T> | undefined;\n        onMouseOut?: MouseEventHandler<T> | undefined;\n        onMouseOutCapture?: MouseEventHandler<T> | undefined;\n        onMouseOver?: MouseEventHandler<T> | undefined;\n        onMouseOverCapture?: MouseEventHandler<T> | undefined;\n        onMouseUp?: MouseEventHandler<T> | undefined;\n        onMouseUpCapture?: MouseEventHandler<T> | undefined;\n    \n        // Selection Events\n        onSelect?: ReactEventHandler<T> | undefined;\n        onSelectCapture?: ReactEventHandler<T> | undefined;\n    \n        // Touch Events\n        onTouchCancel?: TouchEventHandler<T> | undefined;\n        onTouchCancelCapture?: TouchEventHandler<T> | undefined;\n        onTouchEnd?: TouchEventHandler<T> | undefined;\n        onTouchEndCapture?: TouchEventHandler<T> | undefined;\n        onTouchMove?: TouchEventHandler<T> | undefined;\n        onTouchMoveCapture?: TouchEventHandler<T> | undefined;\n        onTouchStart?: TouchEventHandler<T> | undefined;\n        onTouchStartCapture?: TouchEventHandler<T> | undefined;\n    \n        // Pointer Events\n        onPointerDown?: PointerEventHandler<T> | undefined;\n        onPointerDownCapture?: PointerEventHandler<T> | undefined;\n        onPointerMove?: PointerEventHandler<T> | undefined;\n        onPointerMoveCapture?: PointerEventHandler<T> | undefined;\n        onPointerUp?: PointerEventHandler<T> | undefined;\n        onPointerUpCapture?: PointerEventHandler<T> | undefined;\n        onPointerCancel?: PointerEventHandler<T> | undefined;\n        onPointerCancelCapture?: PointerEventHandler<T> | undefined;\n        onPointerEnter?: PointerEventHandler<T> | undefined;\n        onPointerEnterCapture?: PointerEventHandler<T> | undefined;\n        onPointerLeave?: PointerEventHandler<T> | undefined;\n        onPointerLeaveCapture?: PointerEventHandler<T> | undefined;\n        onPointerOver?: PointerEventHandler<T> | undefined;\n        onPointerOverCapture?: PointerEventHandler<T> | undefined;\n        onPointerOut?: PointerEventHandler<T> | undefined;\n        onPointerOutCapture?: PointerEventHandler<T> | undefined;\n        onGotPointerCapture?: PointerEventHandler<T> | undefined;\n        onGotPointerCaptureCapture?: PointerEventHandler<T> | undefined;\n        onLostPointerCapture?: PointerEventHandler<T> | undefined;\n        onLostPointerCaptureCapture?: PointerEventHandler<T> | undefined;\n    \n        // UI Events\n        onScroll?: UIEventHandler<T> | undefined;\n        onScrollCapture?: UIEventHandler<T> | undefined;\n    \n        // Wheel Events\n        onWheel?: WheelEventHandler<T> | undefined;\n        onWheelCapture?: WheelEventHandler<T> | undefined;\n    \n        // Animation Events\n        onAnimationStart?: AnimationEventHandler<T> | undefined;\n        onAnimationStartCapture?: AnimationEventHandler<T> | undefined;\n        onAnimationEnd?: AnimationEventHandler<T> | undefined;\n        onAnimationEndCapture?: AnimationEventHandler<T> | undefined;\n        onAnimationIteration?: AnimationEventHandler<T> | undefined;\n        onAnimationIterationCapture?: AnimationEventHandler<T> | undefined;\n    \n        // Transition Events\n        onTransitionEnd?: TransitionEventHandler<T> | undefined;\n        onTransitionEndCapture?: TransitionEventHandler<T> | undefined;\n      }\n    \n      export interface CSSProperties extends CSS.Properties<string | number> {\n        /**\n         * The index signature was removed to enable closed typing for style\n         * using CSSType. You\'re able to use type assertion or module augmentation\n         * to add properties or an index signature of your own.\n         *\n         * For examples and more information, visit:\n         * https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors\n         */\n      }\n    \n      // All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/\n      interface AriaAttributes {\n        /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\n        "aria-activedescendant"?: string | undefined;\n        /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\n        "aria-atomic"?: Booleanish | undefined;\n        /**\n         * Indicates whether inputting text could trigger display of one or more predictions of the user\'s intended value for an input and specifies how predictions would be\n         * presented if they are made.\n         */\n        "aria-autocomplete"?: "none" | "inline" | "list" | "both" | undefined;\n        /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\n        "aria-busy"?: Booleanish | undefined;\n        /**\n         * Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n         * @see aria-pressed @see aria-selected.\n         */\n        "aria-checked"?: boolean | "false" | "mixed" | "true" | undefined;\n        /**\n         * Defines the total number of columns in a table, grid, or treegrid.\n         * @see aria-colindex.\n         */\n        "aria-colcount"?: number | undefined;\n        /**\n         * Defines an element\'s column index or position with respect to the total number of columns within a table, grid, or treegrid.\n         * @see aria-colcount @see aria-colspan.\n         */\n        "aria-colindex"?: number | undefined;\n        /**\n         * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n         * @see aria-colindex @see aria-rowspan.\n         */\n        "aria-colspan"?: number | undefined;\n        /**\n         * Identifies the element (or elements) whose contents or presence are controlled by the current element.\n         * @see aria-owns.\n         */\n        "aria-controls"?: string | undefined;\n        /** Indicates the element that represents the current item within a container or set of related elements. */\n        "aria-current"?:\n          | boolean\n          | "false"\n          | "true"\n          | "page"\n          | "step"\n          | "location"\n          | "date"\n          | "time"\n          | undefined;\n        /**\n         * Identifies the element (or elements) that describes the object.\n         * @see aria-labelledby\n         */\n        "aria-describedby"?: string | undefined;\n        /**\n         * Identifies the element that provides a detailed, extended description for the object.\n         * @see aria-describedby.\n         */\n        "aria-details"?: string | undefined;\n        /**\n         * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n         * @see aria-hidden @see aria-readonly.\n         */\n        "aria-disabled"?: Booleanish | undefined;\n        /**\n         * Indicates what functions can be performed when a dragged object is released on the drop target.\n         * @deprecated in ARIA 1.1\n         */\n        "aria-dropeffect"?:\n          | "none"\n          | "copy"\n          | "execute"\n          | "link"\n          | "move"\n          | "popup"\n          | undefined;\n        /**\n         * Identifies the element that provides an error message for the object.\n         * @see aria-invalid @see aria-describedby.\n         */\n        "aria-errormessage"?: string | undefined;\n        /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\n        "aria-expanded"?: Booleanish | undefined;\n        /**\n         * Identifies the next element (or elements) in an alternate reading order of content which, at the user\'s discretion,\n         * allows assistive technology to override the general default of reading in document source order.\n         */\n        "aria-flowto"?: string | undefined;\n        /**\n         * Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n         * @deprecated in ARIA 1.1\n         */\n        "aria-grabbed"?: Booleanish | undefined;\n        /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\n        "aria-haspopup"?:\n          | boolean\n          | "false"\n          | "true"\n          | "menu"\n          | "listbox"\n          | "tree"\n          | "grid"\n          | "dialog"\n          | undefined;\n        /**\n         * Indicates whether the element is exposed to an accessibility API.\n         * @see aria-disabled.\n         */\n        "aria-hidden"?: Booleanish | undefined;\n        /**\n         * Indicates the entered value does not conform to the format expected by the application.\n         * @see aria-errormessage.\n         */\n        "aria-invalid"?:\n          | boolean\n          | "false"\n          | "true"\n          | "grammar"\n          | "spelling"\n          | undefined;\n        /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\n        "aria-keyshortcuts"?: string | undefined;\n        /**\n         * Defines a string value that labels the current element.\n         * @see aria-labelledby.\n         */\n        "aria-label"?: string | undefined;\n        /**\n         * Identifies the element (or elements) that labels the current element.\n         * @see aria-describedby.\n         */\n        "aria-labelledby"?: string | undefined;\n        /** Defines the hierarchical level of an element within a structure. */\n        "aria-level"?: number | undefined;\n        /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\n        "aria-live"?: "off" | "assertive" | "polite" | undefined;\n        /** Indicates whether an element is modal when displayed. */\n        "aria-modal"?: Booleanish | undefined;\n        /** Indicates whether a text box accepts multiple lines of input or only a single line. */\n        "aria-multiline"?: Booleanish | undefined;\n        /** Indicates that the user may select more than one item from the current selectable descendants. */\n        "aria-multiselectable"?: Booleanish | undefined;\n        /** Indicates whether the element\'s orientation is horizontal, vertical, or unknown/ambiguous. */\n        "aria-orientation"?: "horizontal" | "vertical" | undefined;\n        /**\n         * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\n         * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n         * @see aria-controls.\n         */\n        "aria-owns"?: string | undefined;\n        /**\n         * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\n         * A hint could be a sample value or a brief description of the expected format.\n         */\n        "aria-placeholder"?: string | undefined;\n        /**\n         * Defines an element\'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n         * @see aria-setsize.\n         */\n        "aria-posinset"?: number | undefined;\n        /**\n         * Indicates the current "pressed" state of toggle buttons.\n         * @see aria-checked @see aria-selected.\n         */\n        "aria-pressed"?: boolean | "false" | "mixed" | "true" | undefined;\n        /**\n         * Indicates that the element is not editable, but is otherwise operable.\n         * @see aria-disabled.\n         */\n        "aria-readonly"?: Booleanish | undefined;\n        /**\n         * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n         * @see aria-atomic.\n         */\n        "aria-relevant"?:\n          | "additions"\n          | "additions removals"\n          | "additions text"\n          | "all"\n          | "removals"\n          | "removals additions"\n          | "removals text"\n          | "text"\n          | "text additions"\n          | "text removals"\n          | undefined;\n        /** Indicates that user input is required on the element before a form may be submitted. */\n        "aria-required"?: Booleanish | undefined;\n        /** Defines a human-readable, author-localized description for the role of an element. */\n        "aria-roledescription"?: string | undefined;\n        /**\n         * Defines the total number of rows in a table, grid, or treegrid.\n         * @see aria-rowindex.\n         */\n        "aria-rowcount"?: number | undefined;\n        /**\n         * Defines an element\'s row index or position with respect to the total number of rows within a table, grid, or treegrid.\n         * @see aria-rowcount @see aria-rowspan.\n         */\n        "aria-rowindex"?: number | undefined;\n        /**\n         * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n         * @see aria-rowindex @see aria-colspan.\n         */\n        "aria-rowspan"?: number | undefined;\n        /**\n         * Indicates the current "selected" state of various widgets.\n         * @see aria-checked @see aria-pressed.\n         */\n        "aria-selected"?: Booleanish | undefined;\n        /**\n         * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n         * @see aria-posinset.\n         */\n        "aria-setsize"?: number | undefined;\n        /** Indicates if items in a table or grid are sorted in ascending or descending order. */\n        "aria-sort"?: "none" | "ascending" | "descending" | "other" | undefined;\n        /** Defines the maximum allowed value for a range widget. */\n        "aria-valuemax"?: number | undefined;\n        /** Defines the minimum allowed value for a range widget. */\n        "aria-valuemin"?: number | undefined;\n        /**\n         * Defines the current value for a range widget.\n         * @see aria-valuetext.\n         */\n        "aria-valuenow"?: number | undefined;\n        /** Defines the human readable text alternative of aria-valuenow for a range widget. */\n        "aria-valuetext"?: string | undefined;\n      }\n    \n      // All the WAI-ARIA 1.1 role attribute values from https://www.w3.org/TR/wai-aria-1.1/#role_definitions\n      type AriaRole =\n        | "alert"\n        | "alertdialog"\n        | "application"\n        | "article"\n        | "banner"\n        | "button"\n        | "cell"\n        | "checkbox"\n        | "columnheader"\n        | "combobox"\n        | "complementary"\n        | "contentinfo"\n        | "definition"\n        | "dialog"\n        | "directory"\n        | "document"\n        | "feed"\n        | "figure"\n        | "form"\n        | "grid"\n        | "gridcell"\n        | "group"\n        | "heading"\n        | "img"\n        | "link"\n        | "list"\n        | "listbox"\n        | "listitem"\n        | "log"\n        | "main"\n        | "marquee"\n        | "math"\n        | "menu"\n        | "menubar"\n        | "menuitem"\n        | "menuitemcheckbox"\n        | "menuitemradio"\n        | "navigation"\n        | "none"\n        | "note"\n        | "option"\n        | "presentation"\n        | "progressbar"\n        | "radio"\n        | "radiogroup"\n        | "region"\n        | "row"\n        | "rowgroup"\n        | "rowheader"\n        | "scrollbar"\n        | "search"\n        | "searchbox"\n        | "separator"\n        | "slider"\n        | "spinbutton"\n        | "status"\n        | "switch"\n        | "tab"\n        | "table"\n        | "tablist"\n        | "tabpanel"\n        | "term"\n        | "textbox"\n        | "timer"\n        | "toolbar"\n        | "tooltip"\n        | "tree"\n        | "treegrid"\n        | "treeitem"\n        | (string & {});\n    \n      interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n        // React-specific Attributes\n        defaultChecked?: boolean | undefined;\n        defaultValue?: string | number | ReadonlyArray<string> | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n    \n        // Standard HTML Attributes\n        accessKey?: string | undefined;\n        className?: string | undefined;\n        contentEditable?: Booleanish | "inherit" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: Booleanish | undefined;\n        hidden?: boolean | undefined;\n        id?: string | undefined;\n        lang?: string | undefined;\n        placeholder?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: Booleanish | undefined;\n        style?: CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: "yes" | "no" | undefined;\n    \n        // Unknown\n        radioGroup?: string | undefined; // <command>, <menuitem>\n    \n        // WAI-ARIA\n        role?: AriaRole | undefined;\n    \n        // RDFa Attributes\n        about?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        resource?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n    \n        // Non-standard Attributes\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        color?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: "on" | "off" | undefined;\n    \n        // Living Standard\n        /**\n         * Hints at the type of data that might be entered by the user while editing the element or its contents\n         * @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n         */\n        inputMode?:\n          | "none"\n          | "text"\n          | "tel"\n          | "url"\n          | "email"\n          | "numeric"\n          | "decimal"\n          | "search"\n          | undefined;\n        /**\n         * Specify that a standard HTML element should behave like a defined custom built-in element\n         * @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n         */\n        is?: string | undefined;\n      }\n    \n      interface AllHTMLAttributes<T> extends HTMLAttributes<T> {\n        // Standard HTML Attributes\n        accept?: string | undefined;\n        acceptCharset?: string | undefined;\n        action?: string | undefined;\n        allowFullScreen?: boolean | undefined;\n        allowTransparency?: boolean | undefined;\n        alt?: string | undefined;\n        as?: string | undefined;\n        async?: boolean | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        autoPlay?: boolean | undefined;\n        capture?: boolean | "user" | "environment" | undefined;\n        cellPadding?: number | string | undefined;\n        cellSpacing?: number | string | undefined;\n        charSet?: string | undefined;\n        challenge?: string | undefined;\n        checked?: boolean | undefined;\n        cite?: string | undefined;\n        classID?: string | undefined;\n        cols?: number | undefined;\n        colSpan?: number | undefined;\n        content?: string | undefined;\n        controls?: boolean | undefined;\n        coords?: string | undefined;\n        crossOrigin?: string | undefined;\n        data?: string | undefined;\n        dateTime?: string | undefined;\n        default?: boolean | undefined;\n        defer?: boolean | undefined;\n        disabled?: boolean | undefined;\n        download?: any;\n        encType?: string | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        frameBorder?: number | string | undefined;\n        headers?: string | undefined;\n        height?: number | string | undefined;\n        high?: number | undefined;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        htmlFor?: string | undefined;\n        httpEquiv?: string | undefined;\n        integrity?: string | undefined;\n        keyParams?: string | undefined;\n        keyType?: string | undefined;\n        kind?: string | undefined;\n        label?: string | undefined;\n        list?: string | undefined;\n        loop?: boolean | undefined;\n        low?: number | undefined;\n        manifest?: string | undefined;\n        marginHeight?: number | undefined;\n        marginWidth?: number | undefined;\n        max?: number | string | undefined;\n        maxLength?: number | undefined;\n        media?: string | undefined;\n        mediaGroup?: string | undefined;\n        method?: string | undefined;\n        min?: number | string | undefined;\n        minLength?: number | undefined;\n        multiple?: boolean | undefined;\n        muted?: boolean | undefined;\n        name?: string | undefined;\n        nonce?: string | undefined;\n        noValidate?: boolean | undefined;\n        open?: boolean | undefined;\n        optimum?: number | undefined;\n        pattern?: string | undefined;\n        placeholder?: string | undefined;\n        playsInline?: boolean | undefined;\n        poster?: string | undefined;\n        preload?: string | undefined;\n        readOnly?: boolean | undefined;\n        rel?: string | undefined;\n        required?: boolean | undefined;\n        reversed?: boolean | undefined;\n        rows?: number | undefined;\n        rowSpan?: number | undefined;\n        sandbox?: string | undefined;\n        scope?: string | undefined;\n        scoped?: boolean | undefined;\n        scrolling?: string | undefined;\n        seamless?: boolean | undefined;\n        selected?: boolean | undefined;\n        shape?: string | undefined;\n        size?: number | undefined;\n        sizes?: string | undefined;\n        span?: number | undefined;\n        src?: string | undefined;\n        srcDoc?: string | undefined;\n        srcLang?: string | undefined;\n        srcSet?: string | undefined;\n        start?: number | undefined;\n        step?: number | string | undefined;\n        summary?: string | undefined;\n        target?: string | undefined;\n        type?: string | undefined;\n        useMap?: string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        width?: number | string | undefined;\n        wmode?: string | undefined;\n        wrap?: string | undefined;\n      }\n    \n      type HTMLAttributeReferrerPolicy =\n        | ""\n        | "no-referrer"\n        | "no-referrer-when-downgrade"\n        | "origin"\n        | "origin-when-cross-origin"\n        | "same-origin"\n        | "strict-origin"\n        | "strict-origin-when-cross-origin"\n        | "unsafe-url";\n    \n      type HTMLAttributeAnchorTarget =\n        | "_self"\n        | "_blank"\n        | "_parent"\n        | "_top"\n        | (string & {});\n    \n      interface AnchorHTMLAttributes<T> extends HTMLAttributes<T> {\n        download?: any;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        media?: string | undefined;\n        ping?: string | undefined;\n        rel?: string | undefined;\n        target?: HTMLAttributeAnchorTarget | undefined;\n        type?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n      }\n    \n      interface AudioHTMLAttributes<T> extends MediaHTMLAttributes<T> {}\n    \n      interface AreaHTMLAttributes<T> extends HTMLAttributes<T> {\n        alt?: string | undefined;\n        coords?: string | undefined;\n        download?: any;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        media?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        rel?: string | undefined;\n        shape?: string | undefined;\n        target?: string | undefined;\n      }\n    \n      interface BaseHTMLAttributes<T> extends HTMLAttributes<T> {\n        href?: string | undefined;\n        target?: string | undefined;\n      }\n    \n      interface BlockquoteHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n      }\n    \n      interface ButtonHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoFocus?: boolean | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        name?: string | undefined;\n        type?: "submit" | "reset" | "button" | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface CanvasHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface ColHTMLAttributes<T> extends HTMLAttributes<T> {\n        span?: number | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface ColgroupHTMLAttributes<T> extends HTMLAttributes<T> {\n        span?: number | undefined;\n      }\n    \n      interface DataHTMLAttributes<T> extends HTMLAttributes<T> {\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface DetailsHTMLAttributes<T> extends HTMLAttributes<T> {\n        open?: boolean | undefined;\n        onToggle?: ReactEventHandler<T> | undefined;\n      }\n    \n      interface DelHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n        dateTime?: string | undefined;\n      }\n    \n      interface DialogHTMLAttributes<T> extends HTMLAttributes<T> {\n        onCancel?: ReactEventHandler<T> | undefined;\n        onClose?: ReactEventHandler<T> | undefined;\n        open?: boolean | undefined;\n      }\n    \n      interface EmbedHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        src?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface FieldsetHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        name?: string | undefined;\n      }\n    \n      interface FormHTMLAttributes<T> extends HTMLAttributes<T> {\n        acceptCharset?: string | undefined;\n        action?: string | undefined;\n        autoComplete?: string | undefined;\n        encType?: string | undefined;\n        method?: string | undefined;\n        name?: string | undefined;\n        noValidate?: boolean | undefined;\n        target?: string | undefined;\n      }\n    \n      interface HtmlHTMLAttributes<T> extends HTMLAttributes<T> {\n        manifest?: string | undefined;\n      }\n    \n      interface IframeHTMLAttributes<T> extends HTMLAttributes<T> {\n        allow?: string | undefined;\n        allowFullScreen?: boolean | undefined;\n        allowTransparency?: boolean | undefined;\n        /** @deprecated */\n        frameBorder?: number | string | undefined;\n        height?: number | string | undefined;\n        loading?: "eager" | "lazy" | undefined;\n        /** @deprecated */\n        marginHeight?: number | undefined;\n        /** @deprecated */\n        marginWidth?: number | undefined;\n        name?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        sandbox?: string | undefined;\n        /** @deprecated */\n        scrolling?: string | undefined;\n        seamless?: boolean | undefined;\n        src?: string | undefined;\n        srcDoc?: string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface ImgHTMLAttributes<T> extends HTMLAttributes<T> {\n        alt?: string | undefined;\n        crossOrigin?: "anonymous" | "use-credentials" | "" | undefined;\n        decoding?: "async" | "auto" | "sync" | undefined;\n        height?: number | string | undefined;\n        loading?: "eager" | "lazy" | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        sizes?: string | undefined;\n        src?: string | undefined;\n        srcSet?: string | undefined;\n        useMap?: string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface InsHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n        dateTime?: string | undefined;\n      }\n    \n      type HTMLInputTypeAttribute =\n        | "button"\n        | "checkbox"\n        | "color"\n        | "date"\n        | "datetime-local"\n        | "email"\n        | "file"\n        | "hidden"\n        | "image"\n        | "month"\n        | "number"\n        | "password"\n        | "radio"\n        | "range"\n        | "reset"\n        | "search"\n        | "submit"\n        | "tel"\n        | "text"\n        | "time"\n        | "url"\n        | "week"\n        | (string & {});\n    \n      interface InputHTMLAttributes<T> extends HTMLAttributes<T> {\n        accept?: string | undefined;\n        alt?: string | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        capture?: boolean | "user" | "environment" | undefined; // https://www.w3.org/TR/html-media-capture/#the-capture-attribute\n        checked?: boolean | undefined;\n        crossOrigin?: string | undefined;\n        disabled?: boolean | undefined;\n        enterKeyHint?:\n          | "enter"\n          | "done"\n          | "go"\n          | "next"\n          | "previous"\n          | "search"\n          | "send"\n          | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        height?: number | string | undefined;\n        list?: string | undefined;\n        max?: number | string | undefined;\n        maxLength?: number | undefined;\n        min?: number | string | undefined;\n        minLength?: number | undefined;\n        multiple?: boolean | undefined;\n        name?: string | undefined;\n        pattern?: string | undefined;\n        placeholder?: string | undefined;\n        readOnly?: boolean | undefined;\n        required?: boolean | undefined;\n        size?: number | undefined;\n        src?: string | undefined;\n        step?: number | string | undefined;\n        type?: HTMLInputTypeAttribute | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        width?: number | string | undefined;\n    \n        onChange?: ChangeEventHandler<T> | undefined;\n      }\n    \n      interface KeygenHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoFocus?: boolean | undefined;\n        challenge?: string | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        keyType?: string | undefined;\n        keyParams?: string | undefined;\n        name?: string | undefined;\n      }\n    \n      interface LabelHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        htmlFor?: string | undefined;\n      }\n    \n      interface LiHTMLAttributes<T> extends HTMLAttributes<T> {\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface LinkHTMLAttributes<T> extends HTMLAttributes<T> {\n        as?: string | undefined;\n        crossOrigin?: string | undefined;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        integrity?: string | undefined;\n        media?: string | undefined;\n        imageSrcSet?: string | undefined;\n        imageSizes?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        rel?: string | undefined;\n        sizes?: string | undefined;\n        type?: string | undefined;\n        charSet?: string | undefined;\n      }\n    \n      interface MapHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n      }\n    \n      interface MenuHTMLAttributes<T> extends HTMLAttributes<T> {\n        type?: string | undefined;\n      }\n    \n      interface MediaHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoPlay?: boolean | undefined;\n        controls?: boolean | undefined;\n        controlsList?: string | undefined;\n        crossOrigin?: string | undefined;\n        loop?: boolean | undefined;\n        mediaGroup?: string | undefined;\n        muted?: boolean | undefined;\n        playsInline?: boolean | undefined;\n        preload?: string | undefined;\n        src?: string | undefined;\n      }\n    \n      interface MetaHTMLAttributes<T> extends HTMLAttributes<T> {\n        charSet?: string | undefined;\n        content?: string | undefined;\n        httpEquiv?: string | undefined;\n        name?: string | undefined;\n        media?: string | undefined;\n      }\n    \n      interface MeterHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        high?: number | undefined;\n        low?: number | undefined;\n        max?: number | string | undefined;\n        min?: number | string | undefined;\n        optimum?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface QuoteHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n      }\n    \n      interface ObjectHTMLAttributes<T> extends HTMLAttributes<T> {\n        classID?: string | undefined;\n        data?: string | undefined;\n        form?: string | undefined;\n        height?: number | string | undefined;\n        name?: string | undefined;\n        type?: string | undefined;\n        useMap?: string | undefined;\n        width?: number | string | undefined;\n        wmode?: string | undefined;\n      }\n    \n      interface OlHTMLAttributes<T> extends HTMLAttributes<T> {\n        reversed?: boolean | undefined;\n        start?: number | undefined;\n        type?: "1" | "a" | "A" | "i" | "I" | undefined;\n      }\n    \n      interface OptgroupHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        label?: string | undefined;\n      }\n    \n      interface OptionHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        label?: string | undefined;\n        selected?: boolean | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface OutputHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        htmlFor?: string | undefined;\n        name?: string | undefined;\n      }\n    \n      interface ParamHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface ProgressHTMLAttributes<T> extends HTMLAttributes<T> {\n        max?: number | string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n      }\n    \n      interface SlotHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n      }\n    \n      interface ScriptHTMLAttributes<T> extends HTMLAttributes<T> {\n        async?: boolean | undefined;\n        /** @deprecated */\n        charSet?: string | undefined;\n        crossOrigin?: string | undefined;\n        defer?: boolean | undefined;\n        integrity?: string | undefined;\n        noModule?: boolean | undefined;\n        nonce?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        src?: string | undefined;\n        type?: string | undefined;\n      }\n    \n      interface SelectHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        multiple?: boolean | undefined;\n        name?: string | undefined;\n        required?: boolean | undefined;\n        size?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        onChange?: ChangeEventHandler<T> | undefined;\n      }\n    \n      interface SourceHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        media?: string | undefined;\n        sizes?: string | undefined;\n        src?: string | undefined;\n        srcSet?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface StyleHTMLAttributes<T> extends HTMLAttributes<T> {\n        media?: string | undefined;\n        nonce?: string | undefined;\n        scoped?: boolean | undefined;\n        type?: string | undefined;\n      }\n    \n      interface TableHTMLAttributes<T> extends HTMLAttributes<T> {\n        align?: "left" | "center" | "right" | undefined;\n        bgcolor?: string | undefined;\n        border?: number | undefined;\n        cellPadding?: number | string | undefined;\n        cellSpacing?: number | string | undefined;\n        frame?: boolean | undefined;\n        rules?: "none" | "groups" | "rows" | "columns" | "all" | undefined;\n        summary?: string | undefined;\n        width?: number | string | undefined;\n      }\n    \n      interface TextareaHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        cols?: number | undefined;\n        dirName?: string | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        maxLength?: number | undefined;\n        minLength?: number | undefined;\n        name?: string | undefined;\n        placeholder?: string | undefined;\n        readOnly?: boolean | undefined;\n        required?: boolean | undefined;\n        rows?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        wrap?: string | undefined;\n    \n        onChange?: ChangeEventHandler<T> | undefined;\n      }\n    \n      interface TdHTMLAttributes<T> extends HTMLAttributes<T> {\n        align?: "left" | "center" | "right" | "justify" | "char" | undefined;\n        colSpan?: number | undefined;\n        headers?: string | undefined;\n        rowSpan?: number | undefined;\n        scope?: string | undefined;\n        abbr?: string | undefined;\n        height?: number | string | undefined;\n        width?: number | string | undefined;\n        valign?: "top" | "middle" | "bottom" | "baseline" | undefined;\n      }\n    \n      interface ThHTMLAttributes<T> extends HTMLAttributes<T> {\n        align?: "left" | "center" | "right" | "justify" | "char" | undefined;\n        colSpan?: number | undefined;\n        headers?: string | undefined;\n        rowSpan?: number | undefined;\n        scope?: string | undefined;\n        abbr?: string | undefined;\n      }\n    \n      interface TimeHTMLAttributes<T> extends HTMLAttributes<T> {\n        dateTime?: string | undefined;\n      }\n    \n      interface TrackHTMLAttributes<T> extends HTMLAttributes<T> {\n        default?: boolean | undefined;\n        kind?: string | undefined;\n        label?: string | undefined;\n        src?: string | undefined;\n        srcLang?: string | undefined;\n      }\n    \n      interface VideoHTMLAttributes<T> extends MediaHTMLAttributes<T> {\n        height?: number | string | undefined;\n        playsInline?: boolean | undefined;\n        poster?: string | undefined;\n        width?: number | string | undefined;\n        disablePictureInPicture?: boolean | undefined;\n        disableRemotePlayback?: boolean | undefined;\n      }\n    \n      // this list is "complete" in that it contains every SVG attribute\n      // that React supports, but the types can be improved.\n      // Full list here: https://facebook.github.io/react/docs/dom-elements.html\n      //\n      // The three broad type categories are (in order of restrictiveness):\n      //   - "number | string"\n      //   - "string"\n      //   - union of string literals\n      interface SVGAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n        // Attributes which also defined in HTMLAttributes\n        // See comment in SVGDOMPropertyConfig.js\n        className?: string | undefined;\n        color?: string | undefined;\n        height?: number | string | undefined;\n        id?: string | undefined;\n        lang?: string | undefined;\n        max?: number | string | undefined;\n        media?: string | undefined;\n        method?: string | undefined;\n        min?: number | string | undefined;\n        name?: string | undefined;\n        style?: CSSProperties | undefined;\n        target?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n    \n        // Other HTML properties supported by SVG elements in browsers\n        role?: AriaRole | undefined;\n        tabIndex?: number | undefined;\n        crossOrigin?: "anonymous" | "use-credentials" | "" | undefined;\n    \n        // SVG Specific attributes\n        accentHeight?: number | string | undefined;\n        accumulate?: "none" | "sum" | undefined;\n        additive?: "replace" | "sum" | undefined;\n        alignmentBaseline?:\n          | "auto"\n          | "baseline"\n          | "before-edge"\n          | "text-before-edge"\n          | "middle"\n          | "central"\n          | "after-edge"\n          | "text-after-edge"\n          | "ideographic"\n          | "alphabetic"\n          | "hanging"\n          | "mathematical"\n          | "inherit"\n          | undefined;\n        allowReorder?: "no" | "yes" | undefined;\n        alphabetic?: number | string | undefined;\n        amplitude?: number | string | undefined;\n        arabicForm?: "initial" | "medial" | "terminal" | "isolated" | undefined;\n        ascent?: number | string | undefined;\n        attributeName?: string | undefined;\n        attributeType?: string | undefined;\n        autoReverse?: Booleanish | undefined;\n        azimuth?: number | string | undefined;\n        baseFrequency?: number | string | undefined;\n        baselineShift?: number | string | undefined;\n        baseProfile?: number | string | undefined;\n        bbox?: number | string | undefined;\n        begin?: number | string | undefined;\n        bias?: number | string | undefined;\n        by?: number | string | undefined;\n        calcMode?: number | string | undefined;\n        capHeight?: number | string | undefined;\n        clip?: number | string | undefined;\n        clipPath?: string | undefined;\n        clipPathUnits?: number | string | undefined;\n        clipRule?: number | string | undefined;\n        colorInterpolation?: number | string | undefined;\n        colorInterpolationFilters?:\n          | "auto"\n          | "sRGB"\n          | "linearRGB"\n          | "inherit"\n          | undefined;\n        colorProfile?: number | string | undefined;\n        colorRendering?: number | string | undefined;\n        contentScriptType?: number | string | undefined;\n        contentStyleType?: number | string | undefined;\n        cursor?: number | string | undefined;\n        cx?: number | string | undefined;\n        cy?: number | string | undefined;\n        d?: string | undefined;\n        decelerate?: number | string | undefined;\n        descent?: number | string | undefined;\n        diffuseConstant?: number | string | undefined;\n        direction?: number | string | undefined;\n        display?: number | string | undefined;\n        divisor?: number | string | undefined;\n        dominantBaseline?: number | string | undefined;\n        dur?: number | string | undefined;\n        dx?: number | string | undefined;\n        dy?: number | string | undefined;\n        edgeMode?: number | string | undefined;\n        elevation?: number | string | undefined;\n        enableBackground?: number | string | undefined;\n        end?: number | string | undefined;\n        exponent?: number | string | undefined;\n        externalResourcesRequired?: Booleanish | undefined;\n        fill?: string | undefined;\n        fillOpacity?: number | string | undefined;\n        fillRule?: "nonzero" | "evenodd" | "inherit" | undefined;\n        filter?: string | undefined;\n        filterRes?: number | string | undefined;\n        filterUnits?: number | string | undefined;\n        floodColor?: number | string | undefined;\n        floodOpacity?: number | string | undefined;\n        focusable?: Booleanish | "auto" | undefined;\n        fontFamily?: string | undefined;\n        fontSize?: number | string | undefined;\n        fontSizeAdjust?: number | string | undefined;\n        fontStretch?: number | string | undefined;\n        fontStyle?: number | string | undefined;\n        fontVariant?: number | string | undefined;\n        fontWeight?: number | string | undefined;\n        format?: number | string | undefined;\n        fr?: number | string | undefined;\n        from?: number | string | undefined;\n        fx?: number | string | undefined;\n        fy?: number | string | undefined;\n        g1?: number | string | undefined;\n        g2?: number | string | undefined;\n        glyphName?: number | string | undefined;\n        glyphOrientationHorizontal?: number | string | undefined;\n        glyphOrientationVertical?: number | string | undefined;\n        glyphRef?: number | string | undefined;\n        gradientTransform?: string | undefined;\n        gradientUnits?: string | undefined;\n        hanging?: number | string | undefined;\n        horizAdvX?: number | string | undefined;\n        horizOriginX?: number | string | undefined;\n        href?: string | undefined;\n        ideographic?: number | string | undefined;\n        imageRendering?: number | string | undefined;\n        in2?: number | string | undefined;\n        in?: string | undefined;\n        intercept?: number | string | undefined;\n        k1?: number | string | undefined;\n        k2?: number | string | undefined;\n        k3?: number | string | undefined;\n        k4?: number | string | undefined;\n        k?: number | string | undefined;\n        kernelMatrix?: number | string | undefined;\n        kernelUnitLength?: number | string | undefined;\n        kerning?: number | string | undefined;\n        keyPoints?: number | string | undefined;\n        keySplines?: number | string | undefined;\n        keyTimes?: number | string | undefined;\n        lengthAdjust?: number | string | undefined;\n        letterSpacing?: number | string | undefined;\n        lightingColor?: number | string | undefined;\n        limitingConeAngle?: number | string | undefined;\n        local?: number | string | undefined;\n        markerEnd?: string | undefined;\n        markerHeight?: number | string | undefined;\n        markerMid?: string | undefined;\n        markerStart?: string | undefined;\n        markerUnits?: number | string | undefined;\n        markerWidth?: number | string | undefined;\n        mask?: string | undefined;\n        maskContentUnits?: number | string | undefined;\n        maskUnits?: number | string | undefined;\n        mathematical?: number | string | undefined;\n        mode?: number | string | undefined;\n        numOctaves?: number | string | undefined;\n        offset?: number | string | undefined;\n        opacity?: number | string | undefined;\n        operator?: number | string | undefined;\n        order?: number | string | undefined;\n        orient?: number | string | undefined;\n        orientation?: number | string | undefined;\n        origin?: number | string | undefined;\n        overflow?: number | string | undefined;\n        overlinePosition?: number | string | undefined;\n        overlineThickness?: number | string | undefined;\n        paintOrder?: number | string | undefined;\n        panose1?: number | string | undefined;\n        path?: string | undefined;\n        pathLength?: number | string | undefined;\n        patternContentUnits?: string | undefined;\n        patternTransform?: number | string | undefined;\n        patternUnits?: string | undefined;\n        pointerEvents?: number | string | undefined;\n        points?: string | undefined;\n        pointsAtX?: number | string | undefined;\n        pointsAtY?: number | string | undefined;\n        pointsAtZ?: number | string | undefined;\n        preserveAlpha?: Booleanish | undefined;\n        preserveAspectRatio?: string | undefined;\n        primitiveUnits?: number | string | undefined;\n        r?: number | string | undefined;\n        radius?: number | string | undefined;\n        refX?: number | string | undefined;\n        refY?: number | string | undefined;\n        renderingIntent?: number | string | undefined;\n        repeatCount?: number | string | undefined;\n        repeatDur?: number | string | undefined;\n        requiredExtensions?: number | string | undefined;\n        requiredFeatures?: number | string | undefined;\n        restart?: number | string | undefined;\n        result?: string | undefined;\n        rotate?: number | string | undefined;\n        rx?: number | string | undefined;\n        ry?: number | string | undefined;\n        scale?: number | string | undefined;\n        seed?: number | string | undefined;\n        shapeRendering?: number | string | undefined;\n        slope?: number | string | undefined;\n        spacing?: number | string | undefined;\n        specularConstant?: number | string | undefined;\n        specularExponent?: number | string | undefined;\n        speed?: number | string | undefined;\n        spreadMethod?: string | undefined;\n        startOffset?: number | string | undefined;\n        stdDeviation?: number | string | undefined;\n        stemh?: number | string | undefined;\n        stemv?: number | string | undefined;\n        stitchTiles?: number | string | undefined;\n        stopColor?: string | undefined;\n        stopOpacity?: number | string | undefined;\n        strikethroughPosition?: number | string | undefined;\n        strikethroughThickness?: number | string | undefined;\n        string?: number | string | undefined;\n        stroke?: string | undefined;\n        strokeDasharray?: string | number | undefined;\n        strokeDashoffset?: string | number | undefined;\n        strokeLinecap?: "butt" | "round" | "square" | "inherit" | undefined;\n        strokeLinejoin?: "miter" | "round" | "bevel" | "inherit" | undefined;\n        strokeMiterlimit?: number | string | undefined;\n        strokeOpacity?: number | string | undefined;\n        strokeWidth?: number | string | undefined;\n        surfaceScale?: number | string | undefined;\n        systemLanguage?: number | string | undefined;\n        tableValues?: number | string | undefined;\n        targetX?: number | string | undefined;\n        targetY?: number | string | undefined;\n        textAnchor?: string | undefined;\n        textDecoration?: number | string | undefined;\n        textLength?: number | string | undefined;\n        textRendering?: number | string | undefined;\n        to?: number | string | undefined;\n        transform?: string | undefined;\n        u1?: number | string | undefined;\n        u2?: number | string | undefined;\n        underlinePosition?: number | string | undefined;\n        underlineThickness?: number | string | undefined;\n        unicode?: number | string | undefined;\n        unicodeBidi?: number | string | undefined;\n        unicodeRange?: number | string | undefined;\n        unitsPerEm?: number | string | undefined;\n        vAlphabetic?: number | string | undefined;\n        values?: string | undefined;\n        vectorEffect?: number | string | undefined;\n        version?: string | undefined;\n        vertAdvY?: number | string | undefined;\n        vertOriginX?: number | string | undefined;\n        vertOriginY?: number | string | undefined;\n        vHanging?: number | string | undefined;\n        vIdeographic?: number | string | undefined;\n        viewBox?: string | undefined;\n        viewTarget?: number | string | undefined;\n        visibility?: number | string | undefined;\n        vMathematical?: number | string | undefined;\n        widths?: number | string | undefined;\n        wordSpacing?: number | string | undefined;\n        writingMode?: number | string | undefined;\n        x1?: number | string | undefined;\n        x2?: number | string | undefined;\n        x?: number | string | undefined;\n        xChannelSelector?: string | undefined;\n        xHeight?: number | string | undefined;\n        xlinkActuate?: string | undefined;\n        xlinkArcrole?: string | undefined;\n        xlinkHref?: string | undefined;\n        xlinkRole?: string | undefined;\n        xlinkShow?: string | undefined;\n        xlinkTitle?: string | undefined;\n        xlinkType?: string | undefined;\n        xmlBase?: string | undefined;\n        xmlLang?: string | undefined;\n        xmlns?: string | undefined;\n        xmlnsXlink?: string | undefined;\n        xmlSpace?: string | undefined;\n        y1?: number | string | undefined;\n        y2?: number | string | undefined;\n        y?: number | string | undefined;\n        yChannelSelector?: string | undefined;\n        z?: number | string | undefined;\n        zoomAndPan?: string | undefined;\n      }\n    \n      interface WebViewHTMLAttributes<T> extends HTMLAttributes<T> {\n        allowFullScreen?: boolean | undefined;\n        allowpopups?: boolean | undefined;\n        autoFocus?: boolean | undefined;\n        autosize?: boolean | undefined;\n        blinkfeatures?: string | undefined;\n        disableblinkfeatures?: string | undefined;\n        disableguestresize?: boolean | undefined;\n        disablewebsecurity?: boolean | undefined;\n        guestinstance?: string | undefined;\n        httpreferrer?: string | undefined;\n        nodeintegration?: boolean | undefined;\n        partition?: string | undefined;\n        plugins?: boolean | undefined;\n        preload?: string | undefined;\n        src?: string | undefined;\n        useragent?: string | undefined;\n        webpreferences?: string | undefined;\n      }\n    \n      //\n      // React.DOM\n      // ----------------------------------------------------------------------\n    \n      interface ReactHTML {\n        a: DetailedHTMLFactory<\n          AnchorHTMLAttributes<HTMLAnchorElement>,\n          HTMLAnchorElement\n        >;\n        abbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        address: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        area: DetailedHTMLFactory<\n          AreaHTMLAttributes<HTMLAreaElement>,\n          HTMLAreaElement\n        >;\n        article: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        aside: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        audio: DetailedHTMLFactory<\n          AudioHTMLAttributes<HTMLAudioElement>,\n          HTMLAudioElement\n        >;\n        b: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        base: DetailedHTMLFactory<\n          BaseHTMLAttributes<HTMLBaseElement>,\n          HTMLBaseElement\n        >;\n        bdi: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        bdo: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        big: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        blockquote: DetailedHTMLFactory<\n          BlockquoteHTMLAttributes<HTMLQuoteElement>,\n          HTMLQuoteElement\n        >;\n        body: DetailedHTMLFactory<HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;\n        br: DetailedHTMLFactory<HTMLAttributes<HTMLBRElement>, HTMLBRElement>;\n        button: DetailedHTMLFactory<\n          ButtonHTMLAttributes<HTMLButtonElement>,\n          HTMLButtonElement\n        >;\n        canvas: DetailedHTMLFactory<\n          CanvasHTMLAttributes<HTMLCanvasElement>,\n          HTMLCanvasElement\n        >;\n        caption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        cite: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        code: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        col: DetailedHTMLFactory<\n          ColHTMLAttributes<HTMLTableColElement>,\n          HTMLTableColElement\n        >;\n        colgroup: DetailedHTMLFactory<\n          ColgroupHTMLAttributes<HTMLTableColElement>,\n          HTMLTableColElement\n        >;\n        data: DetailedHTMLFactory<\n          DataHTMLAttributes<HTMLDataElement>,\n          HTMLDataElement\n        >;\n        datalist: DetailedHTMLFactory<\n          HTMLAttributes<HTMLDataListElement>,\n          HTMLDataListElement\n        >;\n        dd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        del: DetailedHTMLFactory<DelHTMLAttributes<HTMLModElement>, HTMLModElement>;\n        details: DetailedHTMLFactory<\n          DetailsHTMLAttributes<HTMLDetailsElement>,\n          HTMLDetailsElement\n        >;\n        dfn: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        dialog: DetailedHTMLFactory<\n          DialogHTMLAttributes<HTMLDialogElement>,\n          HTMLDialogElement\n        >;\n        div: DetailedHTMLFactory<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n        dl: DetailedHTMLFactory<HTMLAttributes<HTMLDListElement>, HTMLDListElement>;\n        dt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        em: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        embed: DetailedHTMLFactory<\n          EmbedHTMLAttributes<HTMLEmbedElement>,\n          HTMLEmbedElement\n        >;\n        fieldset: DetailedHTMLFactory<\n          FieldsetHTMLAttributes<HTMLFieldSetElement>,\n          HTMLFieldSetElement\n        >;\n        figcaption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        figure: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        footer: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        form: DetailedHTMLFactory<\n          FormHTMLAttributes<HTMLFormElement>,\n          HTMLFormElement\n        >;\n        h1: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        h2: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        h3: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        h4: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        h5: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        h6: DetailedHTMLFactory<\n          HTMLAttributes<HTMLHeadingElement>,\n          HTMLHeadingElement\n        >;\n        head: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLHeadElement>;\n        header: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        hgroup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        hr: DetailedHTMLFactory<HTMLAttributes<HTMLHRElement>, HTMLHRElement>;\n        html: DetailedHTMLFactory<\n          HtmlHTMLAttributes<HTMLHtmlElement>,\n          HTMLHtmlElement\n        >;\n        i: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        iframe: DetailedHTMLFactory<\n          IframeHTMLAttributes<HTMLIFrameElement>,\n          HTMLIFrameElement\n        >;\n        img: DetailedHTMLFactory<\n          ImgHTMLAttributes<HTMLImageElement>,\n          HTMLImageElement\n        >;\n        input: DetailedHTMLFactory<\n          InputHTMLAttributes<HTMLInputElement>,\n          HTMLInputElement\n        >;\n        ins: DetailedHTMLFactory<InsHTMLAttributes<HTMLModElement>, HTMLModElement>;\n        kbd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        keygen: DetailedHTMLFactory<KeygenHTMLAttributes<HTMLElement>, HTMLElement>;\n        label: DetailedHTMLFactory<\n          LabelHTMLAttributes<HTMLLabelElement>,\n          HTMLLabelElement\n        >;\n        legend: DetailedHTMLFactory<\n          HTMLAttributes<HTMLLegendElement>,\n          HTMLLegendElement\n        >;\n        li: DetailedHTMLFactory<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;\n        link: DetailedHTMLFactory<\n          LinkHTMLAttributes<HTMLLinkElement>,\n          HTMLLinkElement\n        >;\n        main: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        map: DetailedHTMLFactory<MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;\n        mark: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        menu: DetailedHTMLFactory<MenuHTMLAttributes<HTMLElement>, HTMLElement>;\n        menuitem: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        meta: DetailedHTMLFactory<\n          MetaHTMLAttributes<HTMLMetaElement>,\n          HTMLMetaElement\n        >;\n        meter: DetailedHTMLFactory<\n          MeterHTMLAttributes<HTMLMeterElement>,\n          HTMLMeterElement\n        >;\n        nav: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        noscript: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        object: DetailedHTMLFactory<\n          ObjectHTMLAttributes<HTMLObjectElement>,\n          HTMLObjectElement\n        >;\n        ol: DetailedHTMLFactory<\n          OlHTMLAttributes<HTMLOListElement>,\n          HTMLOListElement\n        >;\n        optgroup: DetailedHTMLFactory<\n          OptgroupHTMLAttributes<HTMLOptGroupElement>,\n          HTMLOptGroupElement\n        >;\n        option: DetailedHTMLFactory<\n          OptionHTMLAttributes<HTMLOptionElement>,\n          HTMLOptionElement\n        >;\n        output: DetailedHTMLFactory<\n          OutputHTMLAttributes<HTMLOutputElement>,\n          HTMLOutputElement\n        >;\n        p: DetailedHTMLFactory<\n          HTMLAttributes<HTMLParagraphElement>,\n          HTMLParagraphElement\n        >;\n        param: DetailedHTMLFactory<\n          ParamHTMLAttributes<HTMLParamElement>,\n          HTMLParamElement\n        >;\n        picture: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        pre: DetailedHTMLFactory<HTMLAttributes<HTMLPreElement>, HTMLPreElement>;\n        progress: DetailedHTMLFactory<\n          ProgressHTMLAttributes<HTMLProgressElement>,\n          HTMLProgressElement\n        >;\n        q: DetailedHTMLFactory<\n          QuoteHTMLAttributes<HTMLQuoteElement>,\n          HTMLQuoteElement\n        >;\n        rp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        rt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        ruby: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        s: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        samp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        slot: DetailedHTMLFactory<\n          SlotHTMLAttributes<HTMLSlotElement>,\n          HTMLSlotElement\n        >;\n        script: DetailedHTMLFactory<\n          ScriptHTMLAttributes<HTMLScriptElement>,\n          HTMLScriptElement\n        >;\n        section: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        select: DetailedHTMLFactory<\n          SelectHTMLAttributes<HTMLSelectElement>,\n          HTMLSelectElement\n        >;\n        small: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        source: DetailedHTMLFactory<\n          SourceHTMLAttributes<HTMLSourceElement>,\n          HTMLSourceElement\n        >;\n        span: DetailedHTMLFactory<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n        strong: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        style: DetailedHTMLFactory<\n          StyleHTMLAttributes<HTMLStyleElement>,\n          HTMLStyleElement\n        >;\n        sub: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        summary: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        sup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        table: DetailedHTMLFactory<\n          TableHTMLAttributes<HTMLTableElement>,\n          HTMLTableElement\n        >;\n        template: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTemplateElement>,\n          HTMLTemplateElement\n        >;\n        tbody: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTableSectionElement>,\n          HTMLTableSectionElement\n        >;\n        td: DetailedHTMLFactory<\n          TdHTMLAttributes<HTMLTableDataCellElement>,\n          HTMLTableDataCellElement\n        >;\n        textarea: DetailedHTMLFactory<\n          TextareaHTMLAttributes<HTMLTextAreaElement>,\n          HTMLTextAreaElement\n        >;\n        tfoot: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTableSectionElement>,\n          HTMLTableSectionElement\n        >;\n        th: DetailedHTMLFactory<\n          ThHTMLAttributes<HTMLTableHeaderCellElement>,\n          HTMLTableHeaderCellElement\n        >;\n        thead: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTableSectionElement>,\n          HTMLTableSectionElement\n        >;\n        time: DetailedHTMLFactory<\n          TimeHTMLAttributes<HTMLTimeElement>,\n          HTMLTimeElement\n        >;\n        title: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTitleElement>,\n          HTMLTitleElement\n        >;\n        tr: DetailedHTMLFactory<\n          HTMLAttributes<HTMLTableRowElement>,\n          HTMLTableRowElement\n        >;\n        track: DetailedHTMLFactory<\n          TrackHTMLAttributes<HTMLTrackElement>,\n          HTMLTrackElement\n        >;\n        u: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        ul: DetailedHTMLFactory<HTMLAttributes<HTMLUListElement>, HTMLUListElement>;\n        var: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        video: DetailedHTMLFactory<\n          VideoHTMLAttributes<HTMLVideoElement>,\n          HTMLVideoElement\n        >;\n        wbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        webview: DetailedHTMLFactory<\n          WebViewHTMLAttributes<HTMLWebViewElement>,\n          HTMLWebViewElement\n        >;\n      }\n    \n      interface ReactSVG {\n        animate: SVGFactory;\n        circle: SVGFactory;\n        clipPath: SVGFactory;\n        defs: SVGFactory;\n        desc: SVGFactory;\n        ellipse: SVGFactory;\n        feBlend: SVGFactory;\n        feColorMatrix: SVGFactory;\n        feComponentTransfer: SVGFactory;\n        feComposite: SVGFactory;\n        feConvolveMatrix: SVGFactory;\n        feDiffuseLighting: SVGFactory;\n        feDisplacementMap: SVGFactory;\n        feDistantLight: SVGFactory;\n        feDropShadow: SVGFactory;\n        feFlood: SVGFactory;\n        feFuncA: SVGFactory;\n        feFuncB: SVGFactory;\n        feFuncG: SVGFactory;\n        feFuncR: SVGFactory;\n        feGaussianBlur: SVGFactory;\n        feImage: SVGFactory;\n        feMerge: SVGFactory;\n        feMergeNode: SVGFactory;\n        feMorphology: SVGFactory;\n        feOffset: SVGFactory;\n        fePointLight: SVGFactory;\n        feSpecularLighting: SVGFactory;\n        feSpotLight: SVGFactory;\n        feTile: SVGFactory;\n        feTurbulence: SVGFactory;\n        filter: SVGFactory;\n        foreignObject: SVGFactory;\n        g: SVGFactory;\n        image: SVGFactory;\n        line: SVGFactory;\n        linearGradient: SVGFactory;\n        marker: SVGFactory;\n        mask: SVGFactory;\n        metadata: SVGFactory;\n        path: SVGFactory;\n        pattern: SVGFactory;\n        polygon: SVGFactory;\n        polyline: SVGFactory;\n        radialGradient: SVGFactory;\n        rect: SVGFactory;\n        stop: SVGFactory;\n        svg: SVGFactory;\n        switch: SVGFactory;\n        symbol: SVGFactory;\n        text: SVGFactory;\n        textPath: SVGFactory;\n        tspan: SVGFactory;\n        use: SVGFactory;\n        view: SVGFactory;\n      }\n    \n      interface ReactDOM extends ReactHTML, ReactSVG {}\n    \n      //\n      // React.PropTypes\n      // ----------------------------------------------------------------------\n    \n      type Validator<T> = PropTypes.Validator<T>;\n    \n      type Requireable<T> = PropTypes.Requireable<T>;\n    \n      type ValidationMap<T> = PropTypes.ValidationMap<T>;\n    \n      type WeakValidationMap<T> = {\n        [K in keyof T]?: null extends T[K]\n          ? Validator<T[K] | null | undefined>\n          : undefined extends T[K]\n          ? Validator<T[K] | null | undefined>\n          : Validator<T[K]>;\n      };\n    \n      interface ReactPropTypes {\n        any: typeof PropTypes.any;\n        array: typeof PropTypes.array;\n        bool: typeof PropTypes.bool;\n        func: typeof PropTypes.func;\n        number: typeof PropTypes.number;\n        object: typeof PropTypes.object;\n        string: typeof PropTypes.string;\n        node: typeof PropTypes.node;\n        element: typeof PropTypes.element;\n        instanceOf: typeof PropTypes.instanceOf;\n        oneOf: typeof PropTypes.oneOf;\n        oneOfType: typeof PropTypes.oneOfType;\n        arrayOf: typeof PropTypes.arrayOf;\n        objectOf: typeof PropTypes.objectOf;\n        shape: typeof PropTypes.shape;\n        exact: typeof PropTypes.exact;\n      }\n    \n      //\n      // React.Children\n      // ----------------------------------------------------------------------\n    \n      /**\n       * @deprecated - Use \'typeof React.Children\' instead.\n       */\n      // Sync with type of \'const Children\'.\n      interface ReactChildren {\n        map<T, C>(\n          children: C | ReadonlyArray<C>,\n          fn: (child: C, index: number) => T\n        ): C extends null | undefined\n          ? C\n          : Array<Exclude<T, boolean | null | undefined>>;\n        forEach<C>(\n          children: C | ReadonlyArray<C>,\n          fn: (child: C, index: number) => void\n        ): void;\n        count(children: any): number;\n        only<C>(children: C): C extends any[] ? never : C;\n        toArray(\n          children: ReactNode | ReactNode[]\n        ): Array<Exclude<ReactNode, boolean | null | undefined>>;\n      }\n    \n      //\n      // Browser Interfaces\n      // https://github.com/nikeee/2048-typescript/blob/master/2048/js/touch.d.ts\n      // ----------------------------------------------------------------------\n    \n      interface AbstractView {\n        styleMedia: StyleMedia;\n        document: Document;\n      }\n    \n      interface Touch {\n        identifier: number;\n        target: EventTarget;\n        screenX: number;\n        screenY: number;\n        clientX: number;\n        clientY: number;\n        pageX: number;\n        pageY: number;\n      }\n    \n      interface TouchList {\n        [index: number]: Touch;\n        length: number;\n        item(index: number): Touch;\n        identifiedTouch(identifier: number): Touch;\n      }\n    \n      //\n      // Error Interfaces\n      // ----------------------------------------------------------------------\n      interface ErrorInfo {\n        /**\n         * Captures which component contained the exception, and its ancestors.\n         */\n        componentStack: string;\n      }\n    }\n    \n    // naked \'any\' type in a conditional type will short circuit and union both the then/else branches\n    // so boolean is only resolved for T = any\n    type IsExactlyAny<T> = boolean extends (T extends never ? true : false)\n      ? true\n      : false;\n    \n    type ExactlyAnyPropertyKeys<T> = {\n      [K in keyof T]: IsExactlyAny<T[K]> extends true ? K : never;\n    }[keyof T];\n    type NotExactlyAnyPropertyKeys<T> = Exclude<keyof T, ExactlyAnyPropertyKeys<T>>;\n    \n    // Try to resolve ill-defined props like for JS users: props can be any, or sometimes objects with properties of type any\n    type MergePropTypes<P, T> =\n      // Distribute over P in case it is a union type\n      P extends any\n        ? // If props is type any, use propTypes definitions\n          IsExactlyAny<P> extends true\n          ? T\n          : // If declared props have indexed properties, ignore inferred props entirely as keyof gets widened\n          string extends keyof P\n          ? P\n          : // Prefer declared types which are not exactly any\n            Pick<P, NotExactlyAnyPropertyKeys<P>> &\n              // For props which are exactly any, use the type inferred from propTypes if present\n              Pick<T, Exclude<keyof T, NotExactlyAnyPropertyKeys<P>>> &\n              // Keep leftover props not specified in propTypes\n              Pick<P, Exclude<keyof P, keyof T>>\n        : never;\n    \n    type InexactPartial<T> = { [K in keyof T]?: T[K] | undefined };\n    \n    // Any prop that has a default prop becomes optional, but its type is unchanged\n    // Undeclared default props are augmented into the resulting allowable attributes\n    // If declared props have indexed properties, ignore default props entirely as keyof gets widened\n    // Wrap in an outer-level conditional type to allow distribution over props that are unions\n    type Defaultize<P, D> = P extends any\n      ? string extends keyof P\n        ? P\n        : Pick<P, Exclude<keyof P, keyof D>> &\n            InexactPartial<Pick<P, Extract<keyof P, keyof D>>> &\n            InexactPartial<Pick<D, Exclude<keyof D, keyof P>>>\n      : never;\n    \n    type ReactManagedAttributes<C, P> = C extends {\n      propTypes: infer T;\n      defaultProps: infer D;\n    }\n      ? Defaultize<MergePropTypes<P, PropTypes.InferProps<T>>, D>\n      : C extends { propTypes: infer T }\n      ? MergePropTypes<P, PropTypes.InferProps<T>>\n      : C extends { defaultProps: infer D }\n      ? Defaultize<P, D>\n      : P;\n    \n    declare global {\n      namespace JSX {\n        interface Element extends React.ReactElement<any, any> {}\n        interface ElementClass extends React.Component<any> {\n          render(): React.ReactNode;\n        }\n        interface ElementAttributesProperty {\n          props: {};\n        }\n        interface ElementChildrenAttribute {\n          children: {};\n        }\n    \n        // We can\'t recurse forever because \'type\' can\'t be self-referential;\n        // let\'s assume it\'s reasonable to do a single React.lazy() around a single React.memo() / vice-versa\n        type LibraryManagedAttributes<C, P> = C extends\n          | React.MemoExoticComponent<infer T>\n          | React.LazyExoticComponent<infer T>\n          ? T extends\n              | React.MemoExoticComponent<infer U>\n              | React.LazyExoticComponent<infer U>\n            ? ReactManagedAttributes<U, P>\n            : ReactManagedAttributes<T, P>\n          : ReactManagedAttributes<C, P>;\n    \n        interface IntrinsicAttributes extends React.Attributes {}\n        interface IntrinsicClassAttributes<T> extends React.ClassAttributes<T> {}\n    \n        interface IntrinsicElements {\n          // HTML\n          a: React.DetailedHTMLProps<\n            React.AnchorHTMLAttributes<HTMLAnchorElement>,\n            HTMLAnchorElement\n          >;\n          abbr: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          address: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          area: React.DetailedHTMLProps<\n            React.AreaHTMLAttributes<HTMLAreaElement>,\n            HTMLAreaElement\n          >;\n          article: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          aside: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          audio: React.DetailedHTMLProps<\n            React.AudioHTMLAttributes<HTMLAudioElement>,\n            HTMLAudioElement\n          >;\n          b: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          base: React.DetailedHTMLProps<\n            React.BaseHTMLAttributes<HTMLBaseElement>,\n            HTMLBaseElement\n          >;\n          bdi: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          bdo: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          big: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          blockquote: React.DetailedHTMLProps<\n            React.BlockquoteHTMLAttributes<HTMLQuoteElement>,\n            HTMLQuoteElement\n          >;\n          body: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLBodyElement>,\n            HTMLBodyElement\n          >;\n          br: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLBRElement>,\n            HTMLBRElement\n          >;\n          button: React.DetailedHTMLProps<\n            React.ButtonHTMLAttributes<HTMLButtonElement>,\n            HTMLButtonElement\n          >;\n          canvas: React.DetailedHTMLProps<\n            React.CanvasHTMLAttributes<HTMLCanvasElement>,\n            HTMLCanvasElement\n          >;\n          caption: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          cite: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          code: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          col: React.DetailedHTMLProps<\n            React.ColHTMLAttributes<HTMLTableColElement>,\n            HTMLTableColElement\n          >;\n          colgroup: React.DetailedHTMLProps<\n            React.ColgroupHTMLAttributes<HTMLTableColElement>,\n            HTMLTableColElement\n          >;\n          data: React.DetailedHTMLProps<\n            React.DataHTMLAttributes<HTMLDataElement>,\n            HTMLDataElement\n          >;\n          datalist: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLDataListElement>,\n            HTMLDataListElement\n          >;\n          dd: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          del: React.DetailedHTMLProps<\n            React.DelHTMLAttributes<HTMLModElement>,\n            HTMLModElement\n          >;\n          details: React.DetailedHTMLProps<\n            React.DetailsHTMLAttributes<HTMLDetailsElement>,\n            HTMLDetailsElement\n          >;\n          dfn: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          dialog: React.DetailedHTMLProps<\n            React.DialogHTMLAttributes<HTMLDialogElement>,\n            HTMLDialogElement\n          >;\n          div: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLDivElement>,\n            HTMLDivElement\n          >;\n          dl: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLDListElement>,\n            HTMLDListElement\n          >;\n          dt: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          em: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          embed: React.DetailedHTMLProps<\n            React.EmbedHTMLAttributes<HTMLEmbedElement>,\n            HTMLEmbedElement\n          >;\n          fieldset: React.DetailedHTMLProps<\n            React.FieldsetHTMLAttributes<HTMLFieldSetElement>,\n            HTMLFieldSetElement\n          >;\n          figcaption: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          figure: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          footer: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          form: React.DetailedHTMLProps<\n            React.FormHTMLAttributes<HTMLFormElement>,\n            HTMLFormElement\n          >;\n          h1: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          h2: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          h3: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          h4: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          h5: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          h6: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadingElement>,\n            HTMLHeadingElement\n          >;\n          head: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHeadElement>,\n            HTMLHeadElement\n          >;\n          header: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          hgroup: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          hr: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLHRElement>,\n            HTMLHRElement\n          >;\n          html: React.DetailedHTMLProps<\n            React.HtmlHTMLAttributes<HTMLHtmlElement>,\n            HTMLHtmlElement\n          >;\n          i: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          iframe: React.DetailedHTMLProps<\n            React.IframeHTMLAttributes<HTMLIFrameElement>,\n            HTMLIFrameElement\n          >;\n          img: React.DetailedHTMLProps<\n            React.ImgHTMLAttributes<HTMLImageElement>,\n            HTMLImageElement\n          >;\n          input: React.DetailedHTMLProps<\n            React.InputHTMLAttributes<HTMLInputElement>,\n            HTMLInputElement\n          >;\n          ins: React.DetailedHTMLProps<\n            React.InsHTMLAttributes<HTMLModElement>,\n            HTMLModElement\n          >;\n          kbd: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          keygen: React.DetailedHTMLProps<\n            React.KeygenHTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          label: React.DetailedHTMLProps<\n            React.LabelHTMLAttributes<HTMLLabelElement>,\n            HTMLLabelElement\n          >;\n          legend: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLLegendElement>,\n            HTMLLegendElement\n          >;\n          li: React.DetailedHTMLProps<\n            React.LiHTMLAttributes<HTMLLIElement>,\n            HTMLLIElement\n          >;\n          link: React.DetailedHTMLProps<\n            React.LinkHTMLAttributes<HTMLLinkElement>,\n            HTMLLinkElement\n          >;\n          main: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          map: React.DetailedHTMLProps<\n            React.MapHTMLAttributes<HTMLMapElement>,\n            HTMLMapElement\n          >;\n          mark: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          menu: React.DetailedHTMLProps<\n            React.MenuHTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          menuitem: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          meta: React.DetailedHTMLProps<\n            React.MetaHTMLAttributes<HTMLMetaElement>,\n            HTMLMetaElement\n          >;\n          meter: React.DetailedHTMLProps<\n            React.MeterHTMLAttributes<HTMLMeterElement>,\n            HTMLMeterElement\n          >;\n          nav: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          noindex: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          noscript: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          object: React.DetailedHTMLProps<\n            React.ObjectHTMLAttributes<HTMLObjectElement>,\n            HTMLObjectElement\n          >;\n          ol: React.DetailedHTMLProps<\n            React.OlHTMLAttributes<HTMLOListElement>,\n            HTMLOListElement\n          >;\n          optgroup: React.DetailedHTMLProps<\n            React.OptgroupHTMLAttributes<HTMLOptGroupElement>,\n            HTMLOptGroupElement\n          >;\n          option: React.DetailedHTMLProps<\n            React.OptionHTMLAttributes<HTMLOptionElement>,\n            HTMLOptionElement\n          >;\n          output: React.DetailedHTMLProps<\n            React.OutputHTMLAttributes<HTMLOutputElement>,\n            HTMLOutputElement\n          >;\n          p: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLParagraphElement>,\n            HTMLParagraphElement\n          >;\n          param: React.DetailedHTMLProps<\n            React.ParamHTMLAttributes<HTMLParamElement>,\n            HTMLParamElement\n          >;\n          picture: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          pre: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLPreElement>,\n            HTMLPreElement\n          >;\n          progress: React.DetailedHTMLProps<\n            React.ProgressHTMLAttributes<HTMLProgressElement>,\n            HTMLProgressElement\n          >;\n          q: React.DetailedHTMLProps<\n            React.QuoteHTMLAttributes<HTMLQuoteElement>,\n            HTMLQuoteElement\n          >;\n          rp: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          rt: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          ruby: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          s: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          samp: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          slot: React.DetailedHTMLProps<\n            React.SlotHTMLAttributes<HTMLSlotElement>,\n            HTMLSlotElement\n          >;\n          script: React.DetailedHTMLProps<\n            React.ScriptHTMLAttributes<HTMLScriptElement>,\n            HTMLScriptElement\n          >;\n          section: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          select: React.DetailedHTMLProps<\n            React.SelectHTMLAttributes<HTMLSelectElement>,\n            HTMLSelectElement\n          >;\n          small: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          source: React.DetailedHTMLProps<\n            React.SourceHTMLAttributes<HTMLSourceElement>,\n            HTMLSourceElement\n          >;\n          span: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLSpanElement>,\n            HTMLSpanElement\n          >;\n          strong: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          style: React.DetailedHTMLProps<\n            React.StyleHTMLAttributes<HTMLStyleElement>,\n            HTMLStyleElement\n          >;\n          sub: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          summary: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          sup: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          table: React.DetailedHTMLProps<\n            React.TableHTMLAttributes<HTMLTableElement>,\n            HTMLTableElement\n          >;\n          template: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTemplateElement>,\n            HTMLTemplateElement\n          >;\n          tbody: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTableSectionElement>,\n            HTMLTableSectionElement\n          >;\n          td: React.DetailedHTMLProps<\n            React.TdHTMLAttributes<HTMLTableDataCellElement>,\n            HTMLTableDataCellElement\n          >;\n          textarea: React.DetailedHTMLProps<\n            React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n            HTMLTextAreaElement\n          >;\n          tfoot: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTableSectionElement>,\n            HTMLTableSectionElement\n          >;\n          th: React.DetailedHTMLProps<\n            React.ThHTMLAttributes<HTMLTableHeaderCellElement>,\n            HTMLTableHeaderCellElement\n          >;\n          thead: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTableSectionElement>,\n            HTMLTableSectionElement\n          >;\n          time: React.DetailedHTMLProps<\n            React.TimeHTMLAttributes<HTMLTimeElement>,\n            HTMLTimeElement\n          >;\n          title: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTitleElement>,\n            HTMLTitleElement\n          >;\n          tr: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLTableRowElement>,\n            HTMLTableRowElement\n          >;\n          track: React.DetailedHTMLProps<\n            React.TrackHTMLAttributes<HTMLTrackElement>,\n            HTMLTrackElement\n          >;\n          u: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          ul: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLUListElement>,\n            HTMLUListElement\n          >;\n          var: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          video: React.DetailedHTMLProps<\n            React.VideoHTMLAttributes<HTMLVideoElement>,\n            HTMLVideoElement\n          >;\n          wbr: React.DetailedHTMLProps<\n            React.HTMLAttributes<HTMLElement>,\n            HTMLElement\n          >;\n          webview: React.DetailedHTMLProps<\n            React.WebViewHTMLAttributes<HTMLWebViewElement>,\n            HTMLWebViewElement\n          >;\n    \n          // SVG\n          svg: React.SVGProps<SVGSVGElement>;\n    \n          animate: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateElement but is not in TypeScript\'s lib.dom.d.ts for now.\n          animateMotion: React.SVGProps<SVGElement>;\n          animateTransform: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateTransformElement but is not in TypeScript\'s lib.dom.d.ts for now.\n          circle: React.SVGProps<SVGCircleElement>;\n          clipPath: React.SVGProps<SVGClipPathElement>;\n          defs: React.SVGProps<SVGDefsElement>;\n          desc: React.SVGProps<SVGDescElement>;\n          ellipse: React.SVGProps<SVGEllipseElement>;\n          feBlend: React.SVGProps<SVGFEBlendElement>;\n          feColorMatrix: React.SVGProps<SVGFEColorMatrixElement>;\n          feComponentTransfer: React.SVGProps<SVGFEComponentTransferElement>;\n          feComposite: React.SVGProps<SVGFECompositeElement>;\n          feConvolveMatrix: React.SVGProps<SVGFEConvolveMatrixElement>;\n          feDiffuseLighting: React.SVGProps<SVGFEDiffuseLightingElement>;\n          feDisplacementMap: React.SVGProps<SVGFEDisplacementMapElement>;\n          feDistantLight: React.SVGProps<SVGFEDistantLightElement>;\n          feDropShadow: React.SVGProps<SVGFEDropShadowElement>;\n          feFlood: React.SVGProps<SVGFEFloodElement>;\n          feFuncA: React.SVGProps<SVGFEFuncAElement>;\n          feFuncB: React.SVGProps<SVGFEFuncBElement>;\n          feFuncG: React.SVGProps<SVGFEFuncGElement>;\n          feFuncR: React.SVGProps<SVGFEFuncRElement>;\n          feGaussianBlur: React.SVGProps<SVGFEGaussianBlurElement>;\n          feImage: React.SVGProps<SVGFEImageElement>;\n          feMerge: React.SVGProps<SVGFEMergeElement>;\n          feMergeNode: React.SVGProps<SVGFEMergeNodeElement>;\n          feMorphology: React.SVGProps<SVGFEMorphologyElement>;\n          feOffset: React.SVGProps<SVGFEOffsetElement>;\n          fePointLight: React.SVGProps<SVGFEPointLightElement>;\n          feSpecularLighting: React.SVGProps<SVGFESpecularLightingElement>;\n          feSpotLight: React.SVGProps<SVGFESpotLightElement>;\n          feTile: React.SVGProps<SVGFETileElement>;\n          feTurbulence: React.SVGProps<SVGFETurbulenceElement>;\n          filter: React.SVGProps<SVGFilterElement>;\n          foreignObject: React.SVGProps<SVGForeignObjectElement>;\n          g: React.SVGProps<SVGGElement>;\n          image: React.SVGProps<SVGImageElement>;\n          line: React.SVGProps<SVGLineElement>;\n          linearGradient: React.SVGProps<SVGLinearGradientElement>;\n          marker: React.SVGProps<SVGMarkerElement>;\n          mask: React.SVGProps<SVGMaskElement>;\n          metadata: React.SVGProps<SVGMetadataElement>;\n          mpath: React.SVGProps<SVGElement>;\n          path: React.SVGProps<SVGPathElement>;\n          pattern: React.SVGProps<SVGPatternElement>;\n          polygon: React.SVGProps<SVGPolygonElement>;\n          polyline: React.SVGProps<SVGPolylineElement>;\n          radialGradient: React.SVGProps<SVGRadialGradientElement>;\n          rect: React.SVGProps<SVGRectElement>;\n          stop: React.SVGProps<SVGStopElement>;\n          switch: React.SVGProps<SVGSwitchElement>;\n          symbol: React.SVGProps<SVGSymbolElement>;\n          text: React.SVGProps<SVGTextElement>;\n          textPath: React.SVGProps<SVGTextPathElement>;\n          tspan: React.SVGProps<SVGTSpanElement>;\n          use: React.SVGProps<SVGUseElement>;\n          view: React.SVGProps<SVGViewElement>;\n        }\n      }\n    }\n    \n    // Type definitions for React (react-dom) 17.0\n// Project: https://reactjs.org\n// Definitions by: Asana <https://asana.com>\n//                 AssureSign <http://www.assuresign.com>\n//                 Microsoft <https://microsoft.com>\n//                 MartynasZilinskas <https://github.com/MartynasZilinskas>\n//                 Josh Rutherford <https://github.com/theruther4d>\n//                 Jessica Franco <https://github.com/Jessidhia>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\nexport as namespace ReactDOM;\n\nimport {\n    ReactInstance, Component, ComponentState,\n    ReactElement, FunctionComponentElement, CElement,\n    DOMAttributes, DOMElement, ReactNode, ReactPortal\n} from \'react\';\n\nexport function findDOMNode(instance: ReactInstance | null | undefined): Element | null | Text;\nexport function unmountComponentAtNode(container: Element | DocumentFragment): boolean;\n\nexport function createPortal(children: ReactNode, container: Element | DocumentFragment, key?: null | string): ReactPortal;\n\nexport const version: string;\nexport const render: Renderer;\nexport const hydrate: Renderer;\n\nexport function flushSync<R>(fn: () => R): R;\nexport function flushSync<A, R>(fn: (a: A) => R, a: A): R;\n\nexport function unstable_batchedUpdates<A, B>(callback: (a: A, b: B) => any, a: A, b: B): void;\nexport function unstable_batchedUpdates<A>(callback: (a: A) => any, a: A): void;\nexport function unstable_batchedUpdates(callback: () => any): void;\n\nexport function unstable_renderSubtreeIntoContainer<T extends Element>(\n    parentComponent: Component<any>,\n    element: DOMElement<DOMAttributes<T>, T>,\n    container: Element,\n    callback?: (element: T) => any): T;\nexport function unstable_renderSubtreeIntoContainer<P, T extends Component<P, ComponentState>>(\n    parentComponent: Component<any>,\n    element: CElement<P, T>,\n    container: Element,\n    callback?: (component: T) => any): T;\nexport function unstable_renderSubtreeIntoContainer<P>(\n    parentComponent: Component<any>,\n    element: ReactElement<P>,\n    container: Element,\n    callback?: (component?: Component<P, ComponentState> | Element) => any): Component<P, ComponentState> | Element | void;\n\nexport type Container = Element | Document | DocumentFragment;\n\nexport interface Renderer {\n    // Deprecated(render): The return value is deprecated.\n    // In future releases the render function\'s return type will be void.\n\n    <T extends Element>(\n        element: DOMElement<DOMAttributes<T>, T>,\n        container: Container| null,\n        callback?: () => void\n    ): T;\n\n    (\n        element: Array<DOMElement<DOMAttributes<any>, any>>,\n        container: Container| null,\n        callback?: () => void\n    ): Element;\n\n    (\n        element: FunctionComponentElement<any> | Array<FunctionComponentElement<any>>,\n        container: Container| null,\n        callback?: () => void\n    ): void;\n\n    <P, T extends Component<P, ComponentState>>(\n        element: CElement<P, T>,\n        container: Container| null,\n        callback?: () => void\n    ): T;\n\n    (\n        element: Array<CElement<any, Component<any, ComponentState>>>,\n        container: Container| null,\n        callback?: () => void\n    ): Component<any, ComponentState>;\n\n    <P>(\n        element: ReactElement<P>,\n        container: Container| null,\n        callback?: () => void\n    ): Component<P, ComponentState> | Element | void;\n\n    (\n        element: ReactElement[],\n        container: Container| null,\n        callback?: () => void\n    ): Component<any, ComponentState> | Element | void;\n}\n\n    ',"file:///node_modules/@types/react/next.d.ts")},eJ=()=>{let{onClose:e}=eR(),n=(0,x.useRef)(),{height:t}=j({ref:n}),a=(0,x.useRef)(),{file:o,files:s,setFile:d,setContent:l,reset:u}=eU(),c=s[o],m=(0,eO.ff)("vs-light","vs-dark");return(0,i.jsxs)(r.xu,{height:"100%",children:[(0,i.jsxs)(r.Eq,{paddingX:"2",spacing:"2",ref:n,children:[(0,i.jsx)(r.Uc,{children:(0,i.jsxs)(eN.v2,{children:[(0,i.jsx)(eN.j2,{as:L.zx,size:"sm",variant:"outline",leftIcon:(0,i.jsx)(V.JO,{as:O.opy,fontSize:"small"}),rightIcon:(0,i.jsx)(V.JO,{as:O.cuw,fontSize:"small"}),children:o}),(0,i.jsx)(eN.qy,{children:Object.keys(s).map(e=>(0,i.jsx)(eN.sN,{value:e,onClick:()=>d(e),children:s[e].name},e))})]})}),(0,i.jsx)(r.Uc,{children:(0,i.jsx)(L.zx,{size:"sm",variant:"outline",onClick:u,children:"Reset"})}),(0,i.jsx)(r.Uc,{children:(0,i.jsx)(L.zx,{className:"tour_close",size:"sm",variant:"outline",onClick:e,children:"Close"})}),(0,i.jsx)(r.iz,{marginY:"2"})]}),(0,i.jsx)(r.xu,{height:"calc(100% - ".concat(t,"px - 2px)"),width:"100%",className:"tour_playGround_editor",children:(0,i.jsx)(ez.ZP,{theme:m,path:c.name,defaultValue:c.content,defaultLanguage:c.language,onMount(e,n){eK(e,n).then(()=>{a.current=e})},onChange(){var e;l(null===(e=a.current)||void 0===e?void 0:e.getValue())}})})]})},eq=(0,x.memo)(eJ),eX=(e,n)=>Object.keys(e).filter(e=>e.endsWith(n)).map(n=>e[n]),eZ=e=>e.filter(e=>null==e?void 0:e.content).map(e=>"<style id='".concat(e.id,"_style'>").concat(e.content,"</style>")).join(""),eY=e=>e.filter(e=>(null==e?void 0:e.content)||(null==e?void 0:e.href)).map(e=>{var n,t;return e.href?e.href.startsWith("http")?"<script id='".concat(e.id,"_script' type='").concat(null!==(n=e.type)&&void 0!==n?n:"text/javascript","' charset='utf-8' crossorigin='anonymous' src='").concat(e.href,"'></script>"):"<script id='".concat(e.id,"_script' type='").concat(null!==(t=e.type)&&void 0!==t?t:"text/javascript","' charset='utf-8' src='").concat(e.href,"'></script>"):"<script id='".concat(e.id,"_script' type='text/javascript'>").concat(e.content,"</script>")}).join(""),eQ=e=>e.filter(e=>null==e?void 0:e.href).map(e=>"<link id='".concat(e.id,"_link' rel='stylesheet' href='").concat(e.href,"' />")).join(""),e$=e=>{let{links:n,styles:t,scripts:i,inlineHtml:r}=e;return'<!DOCTYPE html>\n  <html>\n    <head>\n      <meta charset="utf-8" />\n      <meta name="viewport" content="width=device-width, initial-scale=1" />\n      <style id=\'global\'>\n        html, body {\n          width: 99.8%;\n          height: 100%;\n          margin: 0;\n          padding: 0;\n        }\n      </style>\n      '.concat(n,"\n      ").concat(t,"\n    </head>\n    <body>\n      ").concat(r,"\n      ").concat(i,"\n      <script>\n        window.addEventListener('message', (e) => {\n          const js = e.data.js;\n          const css = e.data.css;\n          const jsId = 'dynamic_js';\n          const cssId = 'dynamic_css';\n          const jsElement = document.querySelector('#' + jsId);\n          const cssElement = document.querySelector('#' + cssId);\n          if (js) {\n            const element = document.createElement('script');\n            element.id = jsId;\n            element.innerHTML = js;\n            if (jsElement) {\n              jsElement.parentNode.replaceChild(element, jsElement);\n            } else {\n              document.body.appendChild(element);\n            }\n          }\n          if (css) {\n            const element = document.createElement('style');\n            element.id = cssId;\n            element.innerHTML = css;\n            if (cssElement) {\n              cssElement.parentNode.replaceChild(element, cssElement);\n            } else {\n              document.head.appendChild(element);\n            }\n          }\n          top.postMessage(e.data, '*');\n        })\n      </script>\n    </body>\n  </html>")},e0=eE.aM,e1=eE.qP,e2=eE.MD,e3=eE.JU,e4=Array.from(new Set([e0,e1,e3,e2])),e8=e4.map((e,n)=>({href:e,id:n.toString()})),e6=e=>{let{styles:n=[],scripts:r=[],links:a=[],onLoad:o}=e,s=eU(e=>e.files),[d,l]=(0,x.useState)(null),[u,c]=(0,k.G)(s["script.tsx"].content,600),m=s["script.tsx"].content,p=eZ(n.concat(eX(s,"css"))),f=eY(e8.concat(r)),T=eQ(a),g=e$({links:T,styles:p,scripts:f,inlineHtml:s["index.html"].content});(0,x.useEffect)(()=>{c(m)},[m,c,g]);let h=(0,x.useRef)(0),b=(0,x.useRef)(),y=(0,x.useRef)();return(0,x.useEffect)(()=>(b.current=new Worker(t.tu(new URL(t.p+t.u(297),t.b))),b.current.addEventListener("message",e=>{let{data:n}=e;n.id===h.current&&l(n)}),()=>b.current.terminate()),[]),(0,x.useEffect)(()=>{h.current++,b.current.postMessage({tsx:u,id:h.current})},[u,g]),(0,x.useEffect)(()=>{if(d){let e=setInterval(()=>{y.current.contentWindow.postMessage(d,"*")},100);return()=>clearInterval(e)}},[d,g]),(0,x.useEffect)(()=>{window.addEventListener("message",e=>{let{data:n}=e;n.id===h.current&&l(null)})},[]),(0,i.jsx)("iframe",{onLoad:o,ref:y,width:"100%",height:"100%",title:"Preview",className:"tour_playGround_preview",sandbox:"allow-modals allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts",srcDoc:g})},e5=(0,x.memo)(e6),e7={lg:12,md:12,sm:12,xs:2,xxs:2},e9={lg:[{i:"a",x:0,y:0,w:6,h:50,minW:4,maxW:8,minH:40},{i:"b",x:6,y:0,w:6,h:50,minW:4,maxW:10,minH:40}],md:[{i:"a",x:0,y:0,w:6,h:40,minW:4,minH:40},{i:"b",x:6,y:0,w:6,h:40,minW:6,minH:40}],sm:[{i:"a",x:0,y:0,w:6,h:40,minW:6,minH:40},{i:"b",x:6,y:0,w:6,h:40,minW:6,minH:40}],xs:[{i:"a",x:0,y:0,w:2,h:30,minW:1,minH:30,static:!0},{i:"b",x:2,y:0,w:2,h:30,minW:2,minH:30,static:!0}],xxs:[{i:"a",x:0,y:0,w:2,h:30,minW:2,minH:30,static:!0},{i:"b",x:2,y:0,w:2,h:30,minW:2,minH:30,static:!0}]},ne=()=>(0,i.jsxs)(m,{className:"layout",cols:e7,layouts:e9,rowHeight:o.W_,measureBeforeMount:!0,draggableHandle:".".concat(o.rn),draggableCancel:".".concat(o.Zz),children:[(0,i.jsx)(l,{children:(0,i.jsx)(eq,{})},"a"),(0,i.jsx)(l,{children:(0,i.jsx)(e5,{})},"b")]}),nn=()=>{let{isOpen:e,onClose:n}=eR();return(0,i.jsxs)(eG.u_,{size:"full",isOpen:e,scrollBehavior:"inside",onClose:n,preserveScrollBarGap:!0,children:[(0,i.jsx)(eG.ZA,{}),(0,i.jsx)(eG.hz,{children:(0,i.jsx)(eG.fe,{id:"modal-scroll-box",paddingTop:"0",paddingX:{base:0,sm:2,md:4,lg:6},children:(0,i.jsx)(ne,{})})})]})},nt=()=>(0,i.jsx)(r.MI,{columns:{base:1,md:2,lg:3},spacing:10,padding:"6",height:"100%",overflow:"hidden",children:[1,2,3,4,5].map(e=>(0,i.jsxs)(r.xu,{children:[(0,i.jsx)(b.s7,{marginY:"2"}),(0,i.jsx)(b.N2,{noOfLines:6,marginY:"2"})]},e))}),ni={name:localStorage.getItem("blog_name")||eE.s8,owner:localStorage.getItem("blog_owner")||eE.u8,orderBy:{field:h.UDC.CreatedAt,direction:h.N9t.Desc}},nr=()=>{let{before:e,after:n,navDirection:t="first"}=ev(),{data:a,loading:o,error:s}=(0,T.a)(h.ojQ,{variables:{...ni,first:"first"===t?15:void 0,last:"last"===t?15:void 0,after:n,before:e}});return o?(0,i.jsx)(nt,{}):s?(0,i.jsx)(eL,{error:s}):(0,i.jsxs)(r.kC,{flexDirection:"column",height:"100%",children:[(0,i.jsx)(r.xu,{overflow:"auto",paddingRight:"4",children:(0,i.jsx)(eM,{data:a.repository.issues.nodes})}),(0,i.jsx)(eI,{}),(0,i.jsx)(y.h_,{children:(0,i.jsx)(eV,{paginationProps:a.repository.issues.pageInfo,containerProps:{right:"4",bottom:"4",position:"fixed"}})})]})},na=()=>{let{onOpen:e}=eR(),n=(0,x.useRef)(),[t,a]=(0,x.useState)(!1),o=(0,M.Sx)({base:!0,md:!1}),{data:s,loading:d,error:l,fetchMore:u,refetch:c,networkStatus:m}=(0,T.a)(h.ojQ,{variables:{...ni,first:15},notifyOnNetworkStatusChange:!0}),p=(0,H.W6)(()=>{var e,n,t;(null==s?void 0:null===(e=s.repository)||void 0===e?void 0:null===(n=e.issues)||void 0===n?void 0:null===(t=n.pageInfo)||void 0===t?void 0:t.hasNextPage)&&u({variables:{after:s.repository.issues.pageInfo.endCursor}})},[]),f=(0,x.useMemo)(()=>(0,v.Z)(()=>{let e=n.current;e&&e.scrollTop+e.clientHeight>=.85*e.scrollHeight&&p()},200),[p]);return d&&m!==g.I.fetchMore?(0,i.jsx)(nt,{}):l?(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(eL,{error:l}),(0,i.jsx)(nn,{}),(0,i.jsx)(y.h_,{children:(0,i.jsxs)(L.hE,{variant:"solid",position:"fixed",bottom:"4",right:"4",className:"tour_buttons",children:[(0,i.jsx)(L.zx,{color:"purple.500",textTransform:"capitalize",onClick:()=>c(),size:{base:"sm",lg:"md"},children:"refresh"}),(0,i.jsx)(L.zx,{color:"red.500",textTransform:"capitalize",onClick:e,size:{base:"sm",lg:"md"},children:"playGround"}),(0,i.jsx)(L.zx,{color:"purple.500",textTransform:"capitalize",display:{base:"none",lg:"block"},onClick:()=>a(e=>!e),children:t?"enable gridLayout":"disable gridLayout"})]})})]}):(0,i.jsxs)(r.kC,{flexDirection:"column",height:"100%",children:[(0,i.jsxs)(r.xu,{ref:n,overflow:"auto",paddingRight:"4",onScroll:f,className:"tour_blogList",children:[(0,i.jsx)(eM,{data:s.repository.issues.nodes,disableGridLayout:t||o}),d&&s.repository.issues.nodes.length&&(0,i.jsx)(r.M5,{children:(0,i.jsx)(E.$,{})})]}),(0,i.jsx)(y.h_,{children:(0,i.jsxs)(L.hE,{variant:"solid",position:"fixed",bottom:"4",right:"4",className:"tour_buttons",children:[(0,i.jsx)(L.zx,{color:"purple.500",textTransform:"capitalize",onClick:()=>c(),size:{base:"sm",lg:"md"},children:"refresh"}),(0,i.jsx)(L.zx,{color:"red.500",textTransform:"capitalize",onClick:e,size:{base:"sm",lg:"md"},children:"playGround"}),(0,i.jsx)(L.zx,{color:"purple.500",textTransform:"capitalize",display:{base:"none",lg:"block"},onClick:()=>a(e=>!e),children:t?"enable gridLayout":"disable gridLayout"})]})}),(0,i.jsx)(eI,{}),(0,i.jsx)(nn,{})]})},no=(0,x.memo)(nr),ns=(0,x.memo)(na);var nd=t(92441),nl=t(35482),nu=t(86267);let nc=e=>{let{pinchRef:n,coverRef:t}=(0,nu.default)();return(0,i.jsx)(r.xu,{ref:t,...e,children:(0,i.jsx)(r.oM,{ratio:220/35,children:(0,i.jsx)(nl.Ee,{ref:n,src:"https://ghchart.rshah.org/MrWangJustToDo",alt:"chart",cursor:"zoom-in",objectFit:"cover"})})})};var nm=t(723);let np=e=>{let{isFirst:n,name:t,email:a,avatarUrl:o,bioHTML:s}=e,{isOpen:d,onOpen:l,onClose:u}=(0,H.qY)();return(0,i.jsx)(ef,{children:(0,i.jsx)(nm.u,{label:(0,i.jsxs)(r.gC,{divider:(0,i.jsx)(r.cX,{borderColor:"cardBorderColor"}),alignItems:"flex-start",spacing:"1",children:[(0,i.jsxs)(r.kC,{alignItems:"center",width:"100%",children:[(0,i.jsx)(V.JO,{as:O.nf1}),(0,i.jsx)(r.xv,{fontWeight:"semibold",marginLeft:"1",noOfLines:1,children:t})]}),a&&(0,i.jsxs)(r.kC,{alignItems:"center",width:"100%",children:[(0,i.jsx)(V.JO,{as:O.Dme}),(0,i.jsx)(r.xv,{marginLeft:"1",noOfLines:1,children:a})]}),s&&(0,i.jsx)(r.xu,{dangerouslySetInnerHTML:{__html:s}})]}),maxWidth:{base:"200px",md:"240px"},isOpen:d,borderRadius:"4",placement:"right",boxShadow:"md",offset:[0,8],hasArrow:!0,children:(0,i.jsx)(er.qE,{src:o,onTouchStart:l,onTouchEnd:u,onMouseEnter:l,onMouseLeave:u,border:"4px solid white",boxShadow:"md",marginTop:n?"0":"-3"})})})},nf=e=>{let{data:n}=e;return(0,i.jsx)(i.Fragment,{children:n.map((e,n)=>{let{login:t,name:r,avatarUrl:a,id:o,email:s,bioHTML:d}=e;return(0,i.jsx)(np,{id:o,isFirst:0===n,name:r||t,email:s,bioHTML:d,avatarUrl:a},o)})})},nT=(0,x.memo)(nf),ng=()=>(0,i.jsxs)(r.xu,{padding:"3",children:[(0,i.jsx)(b.s7,{}),(0,i.jsx)(b.Od,{marginY:"2"}),(0,i.jsx)(b.N2,{noOfLines:6,marginY:"2"})]}),nh=()=>{let{data:e,loading:n,error:t}=(0,T.a)(h.o5b,{variables:{first:10}});return n?(0,i.jsx)(ng,{}):t?(0,i.jsx)(eL,{error:t}):(0,i.jsxs)(r.kC,{flexDirection:"column",padding:"3",height:"100%",className:"tour_about",children:[(0,i.jsx)(r.xu,{padding:"2",children:(0,i.jsx)(er.qE,{name:e.viewer.name,src:e.viewer.avatarUrl,size:"xl",children:(0,i.jsx)(er.MX,{bg:"green.500",boxSize:"0.8em"})})}),(0,i.jsx)(nc,{marginY:"2",className:"tour_commit"}),(0,i.jsx)(r.iz,{marginY:"2"}),(0,i.jsxs)(r.Ug,{divider:(0,i.jsx)(r.cX,{}),spacing:"2",children:[(0,i.jsx)(L.hU,{"aria-label":"github",variant:"link",icon:(0,i.jsx)(V.JO,{as:O.idJ,fontSize:"xl"}),as:"a",href:"https://github.com/MrWangJustToDo/"}),(0,i.jsx)(L.hU,{"aria-label":"leetcode",variant:"link",icon:(0,i.jsx)(V.JO,{as:nd.LRI,fontSize:"xl"}),as:"a",href:"https://leetcode.com/MrWangSay/"})]}),(0,i.jsxs)(r.xu,{fontSize:"sm",marginY:"2",children:[(0,i.jsx)(r.xv,{fontWeight:"semibold",children:"Recommend:"}),(0,i.jsx)(r.rU,{target:"_blank",color:"red.400",href:"https://github.com/MrWangJustToDo/MyReact",title:"https://github.com/MrWangJustToDo/MyReact",children:"MyReact"})]}),(0,i.jsxs)(r.kC,{alignItems:"center",marginTop:"1",children:[(0,i.jsx)(V.JO,{as:O.nf1}),(0,i.jsx)(r.xv,{fontSize:"small",marginLeft:"2",children:e.viewer.login})]}),(0,i.jsxs)(r.kC,{alignItems:"center",marginTop:"1",color:"lightTextColor",children:[(0,i.jsx)(V.JO,{as:O.Dme}),(0,i.jsx)(r.xv,{fontSize:"small",marginLeft:"2",children:e.viewer.email})]}),(0,i.jsx)(r.xv,{fontSize:"x-small",marginY:"1",children:em(e.viewer.createdAt)}),(0,i.jsx)(r.iz,{marginY:"2"}),(0,i.jsx)(r.kC,{overflow:"auto",flexDirection:"column",children:(0,i.jsxs)(r.kC,{justifyContent:"space-between",marginBottom:"2",children:[(0,i.jsxs)(r.kC,{flexDirection:"column",alignItems:"center",children:[(0,i.jsx)(r.kC,{alignItems:"center",marginBottom:"3",children:(0,i.jsx)(r.xv,{textTransform:"capitalize",fontSize:"sm",children:"followers :"})}),(0,i.jsx)(nT,{data:e.viewer.followers.nodes})]}),(0,i.jsxs)(r.kC,{flexDirection:"column",alignItems:"center",children:[(0,i.jsx)(r.kC,{alignItems:"center",marginBottom:"3",children:(0,i.jsx)(r.xv,{textTransform:"capitalize",fontSize:"sm",children:"following :"})}),(0,i.jsx)(nT,{data:e.viewer.following.nodes})]})]})})]})},nb=(0,x.memo)(nh);var ny=t(80426),nM=t(19187);let nH={tourName:"home",tourSteps:[{selector:".tour_placeholder",_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Welcome Home page!"})},{selector:".tour_about",highlightedSelectors:[".tour_about"],mutationObservables:[".tour_about"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"About"})},{selector:".tour_commit",highlightedSelectors:[".tour_commit"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Commit"})},{selector:".tour_blogList",highlightedSelectors:[".tour_blogList"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40 \uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Blog"})},{selector:".tour_buttons",highlightedSelectors:[".tour_buttons"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40 \uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Feature Button"}),_redirect:{nextPath:"/?overlay=open&playGround=MyReact",nextTour:"playGround"}}]},nL={tourName:"playGround",tourSteps:[{selector:".tour_placeholder",_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Welcome PlayGround page!"})},{selector:".tour_playGround_editor",highlightedSelectors:[".tour_playGround_editor"],mutationObservables:[".tour_playGround_editor"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Editor"})},{selector:".tour_playGround_preview",highlightedSelectors:[".tour_playGround_preview"],mutationObservables:[".tour_playGround_preview"],_title:(0,i.jsx)(r.kC,{children:"\uD83D\uDC40"}),_content:(0,i.jsx)(r.kC,{children:"Preview"}),_redirect:{nextPath:"/",nextTour:"home"}}]},nE=[nH],nv=[nL],nx={"/":{tours:nE},"/?overlay=open&playGround=MyReact":{tours:nv}},nR=e=>{var n;return(null===(n=nx[e])||void 0===n?void 0:n.tours)||[]},nP=e=>{let{tourName:n,stepIndex:t}=e,i=nE.find(e=>e.tourName===n),r=nv.find(e=>e.tourName===n);return i&&t<=i.tourSteps.length?{tourName:n,tourIndex:nE.indexOf(i),tours:nE,stepIndex:t,steps:i.tourSteps}:r&&t<=r.tourSteps.length?{tourName:n,tourIndex:nv.indexOf(r),tours:nv,stepIndex:t,steps:r.tourSteps}:null},nC=e=>e.map(nP).filter(Boolean),nS=(0,e_.ZP)((e,n)=>({isOpen:!1,history:[],updateHistory:n=>e({history:n}),tours:[],currentTour:null,setTours:n=>e({tours:n}),gotoNextTour(){let{currentTour:t,tours:i,history:r}=n();if(!t)return e({isOpen:!1}),null;let{stepIndex:a,steps:o,tourIndex:s,tourName:d}=t,{_redirect:l,_beforeNext:u}=o[a],c=null==u?void 0:u();if(a<o.length-1){let m={tourName:(null==c?void 0:c.tourName)||d,stepIndex:(null==c?void 0:c.stepIndex)||a+1},p=r.concat(m);return e({currentTour:nP(m),history:p}),m}if(-1!==s){if(s===i.length-1){if(!l)return e({currentTour:null,isOpen:!1}),null;{let{nextTour:f,nextPath:T,nextIndex:g=0}=l;if(r.some(e=>e.tourName===f))return e({currentTour:null,isOpen:!1}),null;let h=(null==c?void 0:c.tourName)||f,b=(null==c?void 0:c.stepIndex)||g,y={tourName:h,stepIndex:b,redirectFrom:d,redirectPath:T},M=r.concat(y),H=nP(y);return e({currentTour:H,history:M,tours:H.tours}),y}}if(s<i.length-1){let L={tourName:(null==c?void 0:c.tourName)||i[s+1].tourName,stepIndex:(null==c?void 0:c.stepIndex)||0},E=r.concat(L);return e({currentTour:nP(L),history:E}),L}}return e({currentTour:null,isOpen:!1}),null},gotoPrevTour(){},close:()=>e({isOpen:!1}),open(){let{isOpen:t,history:i,tours:r,currentTour:a}=n();if(t)return!0;if(!i.length&&!r.length)return!1;if(i.length){if(a)return e({isOpen:!0}),!0;{let o=nC(i),s=o[o.length-1];return s.tours===r?(e({isOpen:!0,currentTour:s}),!0):(e({isOpen:!1}),!1)}}{let d=[{tourName:r[0].tourName,stepIndex:0}];return e({isOpen:!0,history:d,currentTour:{tourName:r[0].tourName,tours:r,tourIndex:0,steps:r[0].tourSteps,stepIndex:0}}),!0}},reset(e){let{updateHistory:t,close:i}=n();(e||history.length&&!history[history.length-1].redirectFrom)&&(t([]),i())}})),nA=()=>{let{asPath:e}=(0,G.useRouter)(),{setTours:n}=nS(e=>({setTours:e.setTours}),ny.Z);(0,nM.q)(()=>{n(nR(e))})},nw=()=>{let{isOpen:e,history:n,open:t}=nS(e=>({isOpen:e.isOpen,history:e.history,open:e.open}),ny.Z);(0,x.useEffect)(()=>{var i;!e&&(null===(i=n[n.length-1])||void 0===i?void 0:i.redirectFrom)&&t()},[n,e,t])},nD=()=>{let e=nS(e=>e.open);(0,nM.q)(()=>{localStorage.getItem("__enable_tour__")&&e()})},nk=()=>(0,M.Sx)({base:!0,lg:!1}),nF=e=>{let{children:n}=e;return(0,i.jsx)(r.kC,{children:n})},nj=e=>{let{actions:n,stepIndex:t,stepLen:a}=e,{next:o}=n;return(0,i.jsxs)(r.kC,{alignItems:"center",justifyContent:"space-between",fontSize:"small",marginTop:{base:"1",lg:"2"},children:[(0,i.jsxs)(r.xv,{children:[t+1," / ",a]}),(0,i.jsx)(L.zx,{colorScheme:"blue",size:"sm",onClick:o,children:"Next"})]})},nI=e=>{let{children:n}=e;return(0,i.jsx)(r.kC,{children:n})},nV=e=>{let{steps:n,stepIndex:t,stepLen:a,actions:o}=e,s=nk(),d=n[t];return(0,i.jsxs)(r.kC,{width:s?"240px":"320px",flexDirection:"column",paddingX:"4",paddingY:"2",backgroundColor:"cardBackgroundColor",children:[(0,i.jsx)(nI,{steps:n,stepIndex:t,stepLen:a,actions:o,children:null==d?void 0:d._title}),(0,i.jsx)(r.iz,{marginY:{base:"1",lg:"2.5"}}),(0,i.jsx)(nF,{steps:n,stepIndex:t,stepLen:a,actions:o,children:null==d?void 0:d._content}),(0,i.jsx)(nj,{steps:n,stepIndex:t,stepLen:a,actions:o})]})};var nG=t(56122),nO=t(74568),nN=t(49151);let nz=[],n_=e=>{let{onClickModal:n,step:t,steps:a,children:o}=e,s=a[t];(0,nN.N)(!0);let{sizes:d,debouncedRefresh:l}=I(null==s?void 0:s.selector,(null==s?void 0:s.highlightedSelectors)||nz,null==s?void 0:s.action);return(0,i.jsxs)(y.h_,{children:[(0,i.jsx)(nG.Z,{sizes:d,onClick:n,padding:d.left===d.right?0:10}),(0,i.jsx)(r.xu,{position:"fixed",left:d.left-10,top:d.top-10,width:d.width+20,height:d.height+20,zIndex:"100000"}),(0,i.jsx)(w.XS,{resizeObservables:null==s?void 0:s.resizeObservables,mutationObservables:null==s?void 0:s.mutationObservables,refresh:l}),(0,i.jsx)(nO.J,{sizes:d,refresher:s,position(e){let{right:n,bottom:t,windowWidth:i,windowHeight:r}=e;return n>=i-20?"left":t>=r-20?"top":d.left===d.right&&d.top===d.bottom?"center":"bottom"},styles:{popover:e=>({...e,padding:0,borderRadius:4,overflow:"hidden"})},children:o})]})},nW=e=>{let{onFinish:n}=e,t=(0,G.useRouter)(),{isOpen:r,close:a,gotoNext:o,currentStep:s,reset:d}=nS(e=>({isOpen:e.isOpen,close:e.close,gotoNext:e.gotoNextTour,currentStep:e.currentTour,reset:e.reset}),ny.Z);nA(),nw(),nD();let l=(0,x.useCallback)(()=>{},[]),u=(0,x.useCallback)(()=>{},[]),c=(0,H.W6)(()=>{let e=o();if(!e){null==n||n(),d(!0);return}let{redirectPath:i}=e;i&&(t.push(i),a())}),m=(0,x.useMemo)(()=>s?(0,i.jsx)(nV,{stepIndex:s.stepIndex,steps:s.steps,stepLen:s.steps.length,actions:{goTo:l,prev:u,next:c}}):null,[s,l,u,c]);return r&&s?(0,i.jsx)(n_,{onClickModal:()=>d(!0),step:s.stepIndex,steps:s.steps,children:m}):null},nB={lg:12,md:12,sm:12,xs:2,xxs:2},nU={lg:[{i:"a",x:0,y:0,w:3,h:40,minW:2,maxW:5,minH:25},{i:"b",x:3,y:0,w:9,h:50,minW:6,minH:50}],md:[{i:"a",x:0,y:0,w:4,h:30,minW:2,maxW:6,minH:20},{i:"b",x:4,y:0,w:8,h:40,minW:6,minH:40}],sm:[{i:"a",x:0,y:0,w:5,h:30,minW:2,maxW:8,minH:15},{i:"b",x:5,y:0,w:7,h:40,minW:6,minH:40}],xs:[{i:"a",x:0,y:0,w:2,h:20,minW:1,minH:10,static:!0},{i:"b",x:2,y:0,w:2,h:30,minW:2,minH:30,static:!0}],xxs:[{i:"a",x:0,y:0,w:2,h:20,minW:2,minH:10,static:!0},{i:"b",x:2,y:0,w:2,h:30,minW:2,minH:30,static:!0}]},nK=()=>(0,i.jsxs)(r.W2,{maxWidth:f.R,children:[(0,i.jsx)(nW,{}),(0,i.jsxs)(m,{className:"layout",cols:nB,layouts:nU,rowHeight:o.W_,draggableHandle:".".concat(o.rn),draggableCancel:".".concat(o.Zz),children:[(0,i.jsx)(l,{contentProps:{overflow:"auto"},children:(0,i.jsx)(nb,{})},"a"),(0,i.jsx)(l,{className:"grid-card-list",children:o.BZ?(0,i.jsx)(ns,{}):(0,i.jsx)(no,{})},"b")]})]})}},function(e){e.O(0,[829,800,303,774,888,179],function(){return e(e.s=91099)}),_N_E=e.O()}]);